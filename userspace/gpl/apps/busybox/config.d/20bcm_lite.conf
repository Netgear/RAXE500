#!/usr/bin/env perl

#
# DO NOT EDIT THIS FILE
#
# This file reads .config, makes changes, and writes it back
# if you need to make further changes, COPY this file to another
# executable file in the config.d directory with a .conf extension 
# and replace the ACTIONS section with your own
#

use strict;
use warnings;
use BRCM::GenConfig;

my $g;
if (!@ARGV){
  print "\n Use the default configuration file. e.g. .config \n"; 
  $g = new BRCM::GenConfig('.config');
}else{
  $g = new BRCM::GenConfig($ARGV[0]);
}

my $extra_brcm_path="";
if ($ENV{BRCM_EXTRA_PATH} )
{
        $extra_brcm_path="$ENV{BRCM_EXTRA_PATH}"
}



# ACTIONS start here

$g->set( "CONFIG_PREFIX", qq["$ENV{INSTALL_DIR}/$extra_brcm_path/"] );

if( $ENV{BUILD_BUSYBOX_BRCM_LITE} eq 'y' ) {
    $g->unset( "CONFIG_FEATURE_VERBOSE_USAGE");
    $g->unset( "CONFIG_FEATURE_FANCY_SLEEP");
    $g->unset( "CONFIG_STTY");
    $g->unset( "CONFIG_TTY");
    $g->unset( "CONFIG_GREP");
    $g->unset( "CONFIG_FEATURE_INIT_COREDUMPS");
    # $g->unset( "CONFIG_DELUSER"); # required by smb
    $g->unset( "CONFIG_DMESG");
    $g->unset( "CONFIG_CHRT");
    $g->unset( "CONFIG_FLASH_ERASEALL");
    $g->unset( "CONFIG_SYSINFO");
    $g->unset( "CONFIG_FEATURE_IPV6");
    $g->unset( "CONFIG_FEATURE_PREFER_IPV4_ADDRESS");
    $g->unset( "CONFIG_FTPGET");
    $g->unset( "CONFIG_PING6");
    $g->unset( "CONFIG_TFTP");
    $g->unset( "CONFIG_TFTPD");
    $g->unset( "CONFIG_BRCMTFTPD");
    $g->unset( "CONFIG_FEATURE_TFTP_GET");
    $g->unset( "CONFIG_FEATURE_TFTP_PUT");
    $g->unset( "CONFIG_VCONFIG");
    $g->unset( "CONFIG_WGET");
    $g->unset( "CONFIG_SYSLOGD");
    $g->unset( "CONFIG_FEATURE_REMOTE_LOG");
    $g->unset( "CONFIG_FEATURE_SYSLOGD_DUP");
    $g->set( "CONFIG_FEATURE_SYSLOGD_READ_BUFFER_SIZE", 0);
    $g->unset( "CONFIG_FEATURE_IPC_SYSLOG");
    $g->set( "CONFIG_FEATURE_IPC_SYSLOG_BUFFER_SIZE, 0");
    $g->unset( "CONFIG_LOGREAD");
}
if ( $ENV{BUSYBOX_VANILLA_BUILD} eq 'y')
{
    #disable all BRCM modified features
    $g->unset( "CONFIG_BRCMTFTPD");
    $g->unset( "CONFIG_SENDARP");
    $g->unset( "CONFIG_SYSINFO");
    #build both busybox_vanilla and bcmbusybox
    if($ENV{BUILD_BUSYBOX_STATIC} eq "y")
    {
        $g->unset( "CONFIG_PING");
        $g->unset( "CONFIG_PING6");
        # $g->unset( "CONFIG_TFTP"); # Required by WLAN MFG
        $g->unset( "CONFIG_TFTPD");
        # $g->unset( "CONFIG_FEATURE_TFTP_GET"); # Required by WLAN MFG
        # $g->unset( "CONFIG_FEATURE_TFTP_PUT"); # Required by WLAN MFG
        $g->unset( "CONFIG_FTPGET");
        $g->unset( "CONFIG_TRACEROUTE");
        $g->unset( "CONFIG_TRACEROUTE6");
        $g->unset( "CONFIG_KLOGD");
        $g->unset( "CONFIG_NTPD");
        $g->unset( "CONFIG_IFCONFIG");
        $g->unset( "CONFIG_FEATURE_IFCONFIG_STATUS");
        $g->unset( "CONFIG_FEATURE_IFCONFIG_HW");
        $g->unset( "CONFIG_FEATURE_IFCONFIG_BROADCAST_PLUS");
        $g->unset( "CONFIG_SYSLOGD");
        $g->unset( "CONFIG_FEATURE_SYSLOGD_DUP");
        $g->unset( "CONFIG_FEATURE_SYSLOGD_CFG");
        $g->unset( "CONFIG_FEATURE_FAST_TOP");
        $g->unset( "CONFIG_TOP");
        $g->unset( "CONFIG_FEATURE_TOP_CPU_USAGE_PERCENTAGE");
        $g->unset( "CONFIG_FEATURE_TOP_CPU_GLOBAL_PERCENTS");
        $g->unset( "CONFIG_FEATURE_TOP_SMP_CPU");
        $g->unset( "CONFIG_FEATURE_TOP_SMP_PROCESS");
        $g->unset( "CONFIG_FEATURE_TOP_INTERACTIVE");
        # $g->unset( "CONFIG_WGET"); # Required by WLAN MFG
    }
 
}
else
{
    #disable all vanilla features for broadcom patched busybox 
    $g->unset( "CONFIG_ARP");
    $g->unset( "CONFIG_ARPING");
    $g->set( "CONFIG_SH_IS_NONE", "y");
    $g->unset( "CONFIG_SH_IS_ASH");
    $g->unset( "CONFIG_ASH");
    $g->unset( "CONFIG_ASH_OPTIMIZE_FOR_SIZE");
    $g->unset( "CONFIG_ASH_BASH_COMPAT");
    $g->unset( "CONFIG_ASH_ALIAS");
    $g->unset( "CONFIG_ASH_HELP");
    $g->unset( "CONFIG_BASH_IS_ASH");
    $g->unset( "CONFIG_ASH_BASH_COMPAT");
    $g->unset( "CONFIG_BLOCKDEV");
    $g->unset( "CONFIG_CAT");
    $g->unset( "CONFIG_CHMOD");
    $g->unset( "CONFIG_CHRT");
    $g->unset( "CONFIG_CP");
    $g->unset( "CONFIG_DATE");
    $g->unset( "CONFIG_FEATURE_DATE_ISOFMT");
    $g->unset( "CONFIG_DD");
    $g->unset( "CONFIG_FEATURE_DD_SIGNAL_HANDLING");
    $g->unset( "CONFIG_FEATURE_DD_THIRD_STATUS_LINE");
    $g->unset( "CONFIG_FEATURE_DD_IBS_OBS");
    $g->unset( "CONFIG_ADD_SHELL");
    $g->unset( "CONFIG_FEATURE_PREFER_IPV4_ADDRESS");
    $g->unset( "CONFIG_DEPMOD");
    $g->unset( "CONFIG_FEATURE_USE_SENDFILE");
    $g->unset( "CONFIG_DF");
    $g->unset( "CONFIG_DMESG");
    $g->unset( "CONFIG_DELUSER");
    $g->unset( "CONFIG_DU");
    $g->unset( "CONFIG_FEATURE_INIT_COREDUMPS");
    $g->unset( "CONFIG_ECHO");
    $g->unset( "CONFIG_FEATURE_FANCY_ECHO");
    $g->unset( "CONFIG_EXPR");
    $g->unset( "CONFIG_FALSE");
    $g->unset( "CONFIG_FATATTR");
    $g->unset( "CONFIG_FDISK");
    $g->unset( "CONFIG_FEATURE_FDISK_WRITABLE");
    $g->unset( "CONFIG_FREE");
    $g->unset( "CONFIG_FSTRIM");
    $g->unset( "CONFIG_GREP");
    $g->unset( "CONFIG_GUNZIP");
    $g->unset( "CONFIG_GZIP");
    $g->unset( "CONFIG_HALT");
    $g->unset( "CONFIG_INIT");
    $g->unset( "CONFIG_FEATURE_USE_INITTAB");
    $g->unset( "CONFIG_FEATURE_INIT_SCTTY");
    $g->unset( "CONFIG_FEATURE_INIT_COREDUMPS");
    $g->unset( "CONFIG_INSMOD");
    $g->unset( "CONFIG_KILL");
    $g->unset( "CONFIG_KILLALL");
    $g->unset( "CONFIG_KILLALL");
    $g->unset( "CONFIG_LINUX32");
    $g->unset( "CONFIG_LINUX64");
    $g->unset( "CONFIG_LN");
    $g->unset( "CONFIG_LOGGER");
    $g->unset( "CONFIG_LOGREAD");
    $g->unset( "CONFIG_FALSE");
    $g->unset( "CONFIG_LS");
    $g->unset( "CONFIG_FEATURE_LS_FILETYPES");
    $g->unset( "CONFIG_FEATURE_LS_FOLLOWLINKS");
    $g->unset( "CONFIG_FEATURE_LS_RECURSIVE");
    $g->unset( "CONFIG_FEATURE_LS_SORTFILES");
    $g->unset( "CONFIG_FEATURE_LS_TIMESTAMPS");
    $g->unset( "CONFIG_FEATURE_LS_USERNAME");
    $g->unset( "CONFIG_MDEV");
    $g->unset( "CONFIG_FEATURE_MDEV_CONF");
    $g->unset( "CONFIG_FEATURE_MDEV_RENAME");
    $g->unset( "CONFIG_FEATURE_MDEV_RENAME_REGEXP");
    $g->unset( "CONFIG_FEATURE_MDEV_EXEC");
    $g->unset( "CONFIG_FEATURE_MDEV_LOAD_FIRMWARE");
    $g->unset( "CONFIG_MKDIR");
    $g->unset( "CONFIG_MKFS_VFAT");
    $g->unset( "CONFIG_MKNOD");
    $g->unset( "CONFIG_MODPROBE");
    $g->unset( "CONFIG_MORE");
    $g->unset( "CONFIG_MOUNT");
    $g->unset( "CONFIG_FEATURE_MOUNT_FAKE");
    $g->unset( "CONFIG_FEATURE_MOUNT_VERBOSE");
    $g->unset( "CONFIG_UMOUNT");
    $g->unset( "CONFIG_FEATURE_UMOUNT_ALL");
    $g->unset( "CONFIG_FEATURE_FANCY_ECHO");
    $g->unset( "CONFIG_FEATURE_FANCY_SLEEP");
    $g->unset( "CONFIG_SYNC");
    $g->unset( "CONFIG_FEATURE_TASKSET_FANCY");
    $g->unset( "CONFIG_NC");
    $g->unset( "CONFIG_NETSTAT");
    $g->unset( "CONFIG_FEATURE_NETSTAT_WIDE");
    $g->unset( "CONFIG_FEATURE_NETSTAT_PRG");
    $g->unset( "CONFIG_FEATURE_LS_TIMESTAMPS");
    $g->unset( "CONFIG_FEATURE_INIT_COREDUMPS");
    $g->unset( "CONFIG_PS");
    $g->unset( "CONFIG_PWD");
    $g->unset( "CONFIG_USE_BB_PWD_GRP");
    $g->unset( "CONFIG_PWDX");
    $g->unset( "CONFIG_PWDX");
    $g->unset( "CONFIG_REBOOT");
    $g->unset( "CONFIG_PLATFORM_LINUX");
    $g->unset( "CONFIG_FEATURE_USE_TERMIOS");
    $g->unset( "CONFIG_RM");
    $g->unset( "CONFIG_RMMOD");
    $g->unset( "CONFIG_FEATURE_MDEV_LOAD_FIRMWARE");
    $g->unset( "CONFIG_RMMOD");
    $g->unset( "CONFIG_ROUTE");
    $g->unset( "CONFIG_FEATURE_TRACEROUTE_USE_ICMP");
    $g->unset( "CONFIG_FEATURE_SHADOWPASSWDS");
    $g->unset( "CONFIG_USE_BB_SHADOW");
    $g->unset( "CONFIG_USE_BB_CRYPT_SHA");
    $g->unset( "CONFIG_ADD_SHELL");
    $g->unset( "CONFIG_REMOVE_SHELL");
    $g->unset( "CONFIG_BASH_IS_ASH");
    $g->unset( "CONFIG_ASH");
    $g->unset( "CONFIG_ASH_OPTIMIZE_FOR_SIZE");
    $g->unset( "CONFIG_ASH_BASH_COMPAT");
    $g->unset( "CONFIG_ASH_ALIAS");
    $g->unset( "CONFIG_ASH_HELP");
    $g->unset( "CONFIG_FEATURE_SH_MATH");
    $g->unset( "CONFIG_FEATURE_SH_MATH_64");
    $g->unset( "CONFIG_SLEEP");
    $g->unset( "CONFIG_FEATURE_FANCY_SLEEP");
    $g->unset( "CONFIG_SMEMCAP");
    $g->unset( "CONFIG_STTY");
    $g->unset( "CONFIG_SYNC");
    $g->unset( "CONFIG_TAR");
    $g->unset( "CONFIG_FEATURE_TAR_CREATE");
    $g->unset( "CONFIG_TASKSET");
    $g->unset( "CONFIG_FEATURE_TASKSET_FANCY");
    $g->unset( "CONFIG_TEST");
    $g->unset( "CONFIG_TEST1");
    $g->unset( "CONFIG_TEST2");
    $g->unset( "CONFIG_TRUE");
    $g->unset( "CONFIG_STTY");
    $g->unset( "CONFIG_TTY");
    $g->unset( "CONFIG_FEATURE_INIT_SCTTY");
    $g->unset( "CONFIG_UMOUNT");
    $g->unset( "CONFIG_FEATURE_UMOUNT_ALL");
    $g->unset( "CONFIG_UNAME");
    $g->unset( "CONFIG_VCONFIG");
    $g->unset( "CONFIG_BASH_IS_NONE");
    $g->unset( "CONFIG_CUT");
    $g->unset( "CONFIG_TIME");
    $g->unset( "CONFIG_MD5SUM");
    $g->unset( "CONFIG_SHA256SUM");
    $g->unset( "CONFIG_VI");
    $g->unset( "CONFIG_UPTIME");
    $g->unset( "CONFIG_UDHCPC");
    $g->unset( "CONFIG_I2CGET");
    $g->unset( "CONFIG_I2CSET");
    $g->unset( "CONFIG_I2CDUMP");
    $g->unset( "CONFIG_I2CDETECT");
    $g->unset( "CONFIG_SED");
    $g->unset( "CONFIG_SYSCTL");
    $g->unset( "CONFIG_BASENAME");
    $g->unset( "CONFIG_DIRNAME");
    $g->unset( "CONFIG_WHICH");
    $g->unset( "CONFIG_AWK");
    $g->unset( "CONFIG_LSMOD");

}

# ACTIONS end here

$g->write();


