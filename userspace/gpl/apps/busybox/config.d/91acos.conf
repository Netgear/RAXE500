#!/usr/bin/env perl

#
# This file reads .config, makes changes, and writes it back
# if you need to make further changes, COPY this file to another
# executable file in the config.d directory with a .conf extension
# and replace the ACTIONS section with your own
#

use strict;
use warnings;
use BRCM::GenConfig;

my $g;
if (!@ARGV){
  print "\n Use the default configuration file. e.g. .config \n"; 
  $g = new BRCM::GenConfig('.config');
}else{
  $g = new BRCM::GenConfig($ARGV[0]);
}

# LOGIC STARTS HERE

$g->set( "CONFIG_LSMOD", "y" );
$g->set( "CONFIG_MV", "y");
$g->set( "CONFIG_FIND", "y" );
$g->set( "CONFIG_VI", "y" );
$g->set( "CONFIG_FEATURE_VI_MAX_LEN", "4096" );
$g->set( "CONFIG_FEATURE_VI_COLON", "y" );
$g->set( "CONFIG_FEATURE_VI_YANKMARK", "y" );
$g->set( "CONFIG_FEATURE_VI_SEARCH", "y" );
$g->set( "CONFIG_FEATURE_VI_USE_SIGNALS", "y" );
$g->set( "CONFIG_FEATURE_VI_DOT_CMD", "y" );
$g->set( "CONFIG_FEATURE_VI_READONLY", "y" );
$g->set( "CONFIG_FEATURE_VI_SETOPTS", "y" );
$g->set( "CONFIG_FEATURE_VI_SET", "y" );
$g->set( "CONFIG_FEATURE_VI_WIN_RESIZE", "y" );
$g->set( "CONFIG_FEATURE_VI_ASK_TERMINAL", "y" );
$g->set( "CONFIG_FEATURE_VI_UNDO", "y" );
$g->set( "CONFIG_FEATURE_VI_UNDO_QUEUE", "y" );
$g->set( "CONFIG_FEATURE_VI_UNDO_QUEUE_MAX", "256" );
$g->set( "CONFIG_FEATURE_ALLOW_EXEC", "y" );
$g->set( "CONFIG_AWK", "y" );
$g->set( "CONFIG_FEATURE_AWK_LIBM", "y" );
$g->set( "CONFIG_FEATURE_AWK_GNU_EXTENSIONS", "y" );
$g->set( "CONFIG_NICE", "y" );
$g->set( "CONFIG_WC", "y" );
$g->set( "CONFIG_FEATURE_WC_LARGE", "y" );
$g->set( "CONFIG_FEATURE_GREP_CONTEXT", "y" );
$g->set( "CONFIG_XARGS", "y" );
$g->set( "CONFIG_FEATURE_XARGS_SUPPORT_CONFIRMATION", "y" );
$g->set( "CONFIG_FEATURE_XARGS_SUPPORT_QUOTES", "y" );
$g->set( "CONFIG_FEATURE_XARGS_SUPPORT_TERMOPT", "y" );
$g->set( "CONFIG_FEATURE_XARGS_SUPPORT_ZERO_TERM", "y" );
$g->set( "CONFIG_FEATURE_XARGS_SUPPORT_REPL_STR", "y" );
$g->set( "CONFIG_FEATURE_XARGS_SUPPORT_PARALLEL", "y" );
$g->set( "CONFIG_FEATURE_XARGS_SUPPORT_ARGS_FILE", "y" );
$g->set( "CONFIG_BLKID", "y" );
$g->set( "CONFIG_FEATURE_BLKID_TYPE", "y" );
$g->set( "CONFIG_BLOCKDEV", "y" );
$g->set( "CONFIG_VOLUMEID", "y" );
$g->set( "CONFIG_FEATURE_VOLUMEID_BCACHE", "y" );
$g->set( "CONFIG_FEATURE_VOLUMEID_BTRFS", "y" );
$g->set( "CONFIG_FEATURE_VOLUMEID_CRAMFS", "y" );
$g->set( "CONFIG_FEATURE_VOLUMEID_EXFAT", "y" );
$g->set( "CONFIG_FEATURE_VOLUMEID_EXT", "y" );
$g->set( "CONFIG_FEATURE_VOLUMEID_F2FS", "y" );
$g->set( "CONFIG_FEATURE_VOLUMEID_FAT", "y" );
$g->set( "CONFIG_FEATURE_VOLUMEID_HFS", "y" );
$g->set( "CONFIG_FEATURE_VOLUMEID_ISO9660", "y" );
$g->set( "CONFIG_FEATURE_VOLUMEID_JFS", "y" );
$g->set( "CONFIG_FEATURE_VOLUMEID_LFS", "y" );
$g->set( "CONFIG_FEATURE_VOLUMEID_LINUXRAID", "y" );
$g->set( "CONFIG_FEATURE_VOLUMEID_LINUXSWAP", "y" );
$g->set( "CONFIG_FEATURE_VOLUMEID_LUKS", "y" );
$g->set( "CONFIG_FEATURE_VOLUMEID_MINIX", "y" );
$g->set( "CONFIG_FEATURE_VOLUMEID_NILFS", "y" );
$g->set( "CONFIG_FEATURE_VOLUMEID_NTFS", "y" );
$g->set( "CONFIG_FEATURE_VOLUMEID_OCFS2", "y" );
$g->set( "CONFIG_FEATURE_VOLUMEID_REISERFS", "y" );
$g->set( "CONFIG_FEATURE_VOLUMEID_ROMFS", "y" );
$g->set( "CONFIG_FEATURE_VOLUMEID_SQUASHFS", "y" );
$g->set( "CONFIG_FEATURE_VOLUMEID_SYSV", "y" );
$g->set( "CONFIG_FEATURE_VOLUMEID_UBIFS", "y" );
$g->set( "CONFIG_FEATURE_VOLUMEID_UDF", "y" );
$g->set( "CONFIG_FEATURE_VOLUMEID_XFS", "y" );
$g->set( "CONFIG_NSLOOKUP", "y" );
$g->set( "CONFIG_FEATURE_NSLOOKUP_BIG", "y" );
$g->set( "CONFIG_FEATURE_HUMAN_READABLE", "y");
$g->set( "CONFIG_HEAD", "y");
$g->set( "CONFIG_TAIL", "y");
$g->set( "CONFIG_UNAME", "y");
$g->set( "CONFIG_PRINTF", "y");
$g->set( "CONFIG_ID", "y");
$g->set( "CONFIG_BASENAME", "y");
$g->set( "CONFIG_TR", "y");
$g->set( "CONFIG_FEATURE_TR_CLASSES", "y");
$g->set( "CONFIG_FEATURE_TR_EQUIV", "y");
$g->set( "CONFIG_DIRNAME", "y");
$g->set( "CONFIG_ENV", "y");
$g->set( "CONFIG_WHICH", "y");
$g->set( "CONFIG_RMDIR", "y");
$g->set( "CONFIG_SEQ", "y");
$g->set( "CONFIG_PIDOF", "y");
$g->set( "CONFIG_FLOAT_DURATION", "y");
$g->set( "CONFIG_UDHCPC", "n");
$g->set( "CONFIG_UDHCPC_SLACK_FOR_BUGGY_SERVERS", "n");
$g->write();
