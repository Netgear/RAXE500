diff -rupN orig_rp-pppoe-3.13/src/config.h rp-pppoe-3.13/src/config.h
--- orig_rp-pppoe-3.13/src/config.h	1970-01-01 08:00:00.000000000 +0800
+++ rp-pppoe-3.13/src/config.h	2019-10-04 10:52:45.792416647 +0800
@@ -0,0 +1,144 @@
+/* config.h.  Generated from config.h.in by configure.  */
+/* config.h.in.  Generated automatically from configure.in by autoheader.  */
+/* LIC: GPL */
+
+/* Define to empty if the keyword does not work.  */
+/* #undef const */
+
+/* Define if you have <sys/wait.h> that is POSIX.1 compatible.  */
+#define HAVE_SYS_WAIT_H 1
+
+/* Define to `int' if <sys/types.h> doesn't define.  */
+/* #undef pid_t */
+
+/* Define as the return type of signal handlers (int or void).  */
+#define RETSIGTYPE void
+
+/* Define if the setvbuf function takes the buffering type as its second
+   argument and the buffer pointer as the third, as on System V
+   before release 3.  */
+/* #undef SETVBUF_REVERSED */
+
+/* Define if you have the ANSI C header files.  */
+#define STDC_HEADERS 1
+
+/* Define if you can safely include both <sys/time.h> and <time.h>.  */
+#define TIME_WITH_SYS_TIME 1
+
+/* Define if your <sys/time.h> declares struct tm.  */
+/* #undef TM_IN_SYS_TIME */
+
+#define HAVE_STRUCT_SOCKADDR_LL 1
+
+/* The number of bytes in a unsigned int.  */
+#define SIZEOF_UNSIGNED_INT 4
+
+/* The number of bytes in a unsigned long.  */
+#define SIZEOF_UNSIGNED_LONG 8
+
+/* The number of bytes in a unsigned short.  */
+#define SIZEOF_UNSIGNED_SHORT 2
+
+/* Define if you have the select function.  */
+#define HAVE_SELECT 1
+
+/* Define if you have the socket function.  */
+#define HAVE_SOCKET 1
+
+/* Define if you have the strerror function.  */
+#define HAVE_STRERROR 1
+
+/* Define if you have the strtol function.  */
+#define HAVE_STRTOL 1
+
+/* Define if you have the <asm/types.h> header file.  */
+#define HAVE_ASM_TYPES_H 1
+
+/* Define if you have the <fcntl.h> header file.  */
+#define HAVE_FCNTL_H 1
+
+/* Define if you have the <getopt.h> header file.  */
+#define HAVE_GETOPT_H 1
+
+/* Define if you have the <linux/if_ether.h> header file.  */
+#define HAVE_LINUX_IF_ETHER_H 1
+
+/* Define if you have kernel-mode PPPoE in Linux file.  */
+/* #undef HAVE_LINUX_KERNEL_PPPOE */
+
+/* Define if you have the <linux/if_packet.h> header file.  */
+#define HAVE_LINUX_IF_PACKET_H 1
+
+/* Define if you have the <linux/if_pppox.h> header file.  */
+#define HAVE_LINUX_IF_PPPOX_H 1
+
+/* Define if you have the <net/bpf.h> header file.  */
+/* #undef HAVE_NET_BPF_H */
+
+/* Define if you have the <net/if_arp.h> header file.  */
+#define HAVE_NET_IF_ARP_H 1
+
+/* Define if you have the <net/ethernet.h> header file.  */
+#define HAVE_NET_ETHERNET_H 1
+
+/* Define if you have the <net/if.h> header file.  */
+#define HAVE_NET_IF_H 1
+
+/* Define if you have the <linux/if.h> header file.  */
+#define HAVE_LINUX_IF_H 1
+
+/* Define if you have the <net/if_dl.h> header file.  */
+/* #undef HAVE_NET_IF_DL_H */
+
+/* Define if you have the <net/if_ether.h> header file.  */
+/* #undef HAVE_NET_IF_ETHER_H */
+
+/* Define if you have the <net/if_types.h> header file.  */
+/* #undef HAVE_NET_IF_TYPES_H */
+
+/* Define if you have the <netinet/if_ether.h> header file.  */
+#define HAVE_NETINET_IF_ETHER_H 1
+
+/* Define if you have the <netpacket/packet.h> header file.  */
+#define HAVE_NETPACKET_PACKET_H 1
+
+/* Define if you have the <sys/cdefs.h> header file.  */
+#define HAVE_SYS_CDEFS_H 1
+
+/* Define if you have the <sys/dlpi.h> header file.  */
+/* #undef HAVE_SYS_DLPI_H */
+
+/* Define if you have the <sys/ioctl.h> header file.  */
+#define HAVE_SYS_IOCTL_H 1
+
+/* Define if you have the <sys/param.h> header file.  */
+#define HAVE_SYS_PARAM_H 1
+
+/* Define if you have the <sys/socket.h> header file.  */
+#define HAVE_SYS_SOCKET_H 1
+
+/* Define if you have the <sys/time.h> header file.  */
+#define HAVE_SYS_TIME_H 1
+
+/* Define if you have the <sys/uio.h> header file.  */
+#define HAVE_SYS_UIO_H 1
+
+/* Define if you have the <syslog.h> header file.  */
+#define HAVE_SYSLOG_H 1
+
+/* Define if you have the <unistd.h> header file.  */
+#define HAVE_UNISTD_H 1
+
+/* Define if you have the N_HDLC line discipline in pty.h */
+#define HAVE_N_HDLC 1
+
+/* Define if bitfields are packed in reverse order */
+#define PACK_BITFIELDS_REVERSED 1
+
+/* Define to include debugging code */
+#define DEBUGGING_ENABLED 1
+
+/* Solaris moans if we don't do this... */
+#ifdef __sun
+#define __EXTENSIONS__ 1
+#endif
diff -rupN orig_rp-pppoe-3.13/src/libevent/Makefile rp-pppoe-3.13/src/libevent/Makefile
--- orig_rp-pppoe-3.13/src/libevent/Makefile	1970-01-01 08:00:00.000000000 +0800
+++ rp-pppoe-3.13/src/libevent/Makefile	2019-10-04 10:52:45.792416647 +0800
@@ -0,0 +1,41 @@
+# Generated automatically from Makefile.in by configure.
+# $Id$
+#
+# Makefile for event-handling library
+#
+# Copyright 2002 Roaring Penguin Software Inc.
+#
+# This software may be distributed according to the terms of the GNU
+# General Public License, version 2 or (at your option) any later version.
+# LIC: GPL
+
+OBJS=event.o event_tcp.o hash.o event_sig.o
+SRCS=$(OBJS:.o=.c)
+HDRS=event.h event_tcp.h eventpriv.h hash.h
+CFLAGS=-g -O2 -fno-strict-aliasing -Wall -Wstrict-prototypes -I.. $(DEFINES)
+
+all: libevent.a
+
+libevent.a: $(OBJS)
+	rm -f libevent.a
+	$(AR) -cq libevent.a $(OBJS)
+	ranlib libevent.a
+
+event.o: event.c $(HDRS)
+	$(CC) $(CFLAGS) -c -o $@ $<
+
+hash.o: hash.c $(HDRS)
+	$(CC) $(CFLAGS) -c -o $@ $<
+
+event_sig.o: event_sig.c $(HDRS)
+	$(CC) $(CFLAGS) -c -o $@ $<
+
+event_tcp.o: event_tcp.c $(HDRS)
+	$(CC) $(CFLAGS) -c -o $@ $<
+
+clean: FORCE
+	rm -f *.a *.o *~
+
+FORCE:
+
+.phony: FORCE
diff -rupN orig_rp-pppoe-3.13/src/Makefile rp-pppoe-3.13/src/Makefile
--- orig_rp-pppoe-3.13/src/Makefile	1970-01-01 08:00:00.000000000 +0800
+++ rp-pppoe-3.13/src/Makefile	2019-10-04 10:52:45.792416647 +0800
@@ -0,0 +1,351 @@
+# Makefile.  Generated from Makefile.in by configure.
+#***********************************************************************
+#
+# Makefile
+#
+# Makefile for Roaring Penguin's Linux user-space PPPoE client.
+#
+# Copyright (C) 2000 Roaring Penguin Software Inc.
+#
+# This program may be distributed according to the terms of the GNU
+# General Public License, version 2 or (at your option) any later version.
+#
+# LIC: GPL
+#
+# $Id$
+#***********************************************************************
+
+# Version is set ONLY IN THE MAKEFILE!  Don't delete this!
+VERSION=3.13
+
+DEFINES=
+prefix=/usr
+exec_prefix=${prefix}
+mandir=${prefix}/share/man
+docdir=/usr/share/doc/rp-pppoe-$(VERSION)
+install=/usr/bin/install -c
+install_dir=/usr/bin/install -c -d
+sbindir=${exec_prefix}/sbin
+
+# Plugin for pppd on Linux
+LINUX_KERNELMODE_PLUGIN=
+PPPD_INCDIR=/usr/include
+
+# Licensed version
+LIC_INCDIR=
+LIC_LIBDIR=
+LIC_LIB=
+LIC_DEFINE=
+
+# PPPoE relay -- currently only supported on Linux
+PPPOE_RELAY=pppoe-relay
+
+# Program paths
+PPPOE_PATH=$(sbindir)/pppoe
+PPPD_PATH=/usr/sbin/pppd
+
+# Include ServPoET version if we're building for ServPoET
+
+
+# Kernel-mode plugin gets installed here.
+PLUGIN_DIR=/etc/ppp/plugins
+PLUGIN_PATH=$(PLUGIN_DIR)/rp-pppoe.so
+
+# Configuration file paths
+PPPOESERVER_PPPD_OPTIONS=/etc/ppp/pppoe-server-options
+
+PATHS='-DPPPOE_PATH="$(PPPOE_PATH)"' '-DPPPD_PATH="$(PPPD_PATH)"' \
+	'-DPLUGIN_PATH="$(PLUGIN_PATH)"' \
+	'-DPPPOE_SERVER_OPTIONS="$(PPPOESERVER_PPPD_OPTIONS)"'
+
+CFLAGS= -g -O2 -fno-strict-aliasing -Wall -Wstrict-prototypes $(LIC_INCDIR) $(DEFINES) $(LIC_DEFINE) $(PATHS) -Ilibevent
+TARGETS=pppoe pppoe-server pppoe-sniff pppoe-relay
+PPPOE_SERVER_LIBS=$(LIC_LIBDIR) $(LIC_LIB)
+LDFLAGS= 
+
+all: $(TARGETS)
+	@echo ""
+	@echo "Type 'make install' as root to install the software."
+
+pppoe-sniff: pppoe-sniff.o if.o common.o debug.o
+	$(CC) -o $@ $^ $(LDFLAGS)
+
+pppoe-server: pppoe-server.o if.o debug.o common.o md5.o libevent/libevent.a 
+	$(CC) -o $@  $^ $(LDFLAGS) $(PPPOE_SERVER_LIBS) -Llibevent -levent
+
+# Experimental code from Savoir Faire Linux.  I do not consider it
+# production-ready, so not part of the official distribution.
+#pppoe-bridge: pppoe-bridge.o ppp.o modem.o rs232.o if.o debug.o common.o md5.o libevent/libevent.a 
+#	$(CC) -o $@  $^ $(LDFLAGS) $(PPPOE_SERVER_LIBS) -Llibevent -levent
+
+pppoe: pppoe.o if.o debug.o common.o ppp.o discovery.o
+	$(CC) -o $@ $^ $(LDFLAGS)
+
+pppoe-relay: relay.o if.o debug.o common.o
+	$(CC) -o $@ $^ $(LDFLAGS)
+
+pppoe.o: pppoe.c pppoe.h
+	$(CC) $(CFLAGS) '-DVERSION="$(VERSION)"' -c -o $@ $<
+
+discovery.o: discovery.c pppoe.h
+	$(CC) $(CFLAGS) '-DVERSION="$(VERSION)"' -c -o $@ $<
+
+ppp.o: ppp.c pppoe.h
+	$(CC) $(CFLAGS) '-DVERSION="$(VERSION)"' -c -o $@ $<
+
+md5.o: md5.c md5.h
+	$(CC) $(CFLAGS) '-DVERSION="$(VERSION)"' -c -o $@ $<
+
+pppoe-server.o: pppoe-server.c pppoe.h 
+	$(CC) $(CFLAGS) '-DVERSION="$(VERSION)"' -c -o $@ $<
+
+# Experimental code from Savoir Faire Linux.  I do not consider it
+# production-ready, so not part of the official distribution.
+#pppoe-bridge.o: pppoe-bridge.c pppoe.h 
+#	$(CC) $(CFLAGS) '-DVERSION="$(VERSION)"' -c -o $@ $<
+
+pppoe-sniff.o: pppoe-sniff.c pppoe.h
+	$(CC) $(CFLAGS) '-DVERSION="$(VERSION)"' -c -o $@ $<
+
+if.o: if.c pppoe.h
+	$(CC) $(CFLAGS) '-DVERSION="$(VERSION)"' -c -o $@ $<
+
+libevent/libevent.a:
+	cd libevent && $(MAKE) DEFINES="$(DEFINES)"
+
+common.o: common.c pppoe.h
+	$(CC) $(CFLAGS) '-DVERSION="$(VERSION)"' -c -o $@ $<
+
+debug.o: debug.c pppoe.h
+	$(CC) $(CFLAGS) '-DVERSION="$(VERSION)"' -c -o $@ $<
+
+relay.o: relay.c relay.h pppoe.h
+	$(CC) $(CFLAGS) '-DVERSION="$(VERSION)"' -c -o $@ $<
+
+# Experimental code from Savoir Faire Linux.  I do not consider it
+# production-ready, so not part of the official distribution.
+#modem.o: modem.c modem.h
+#	$(CC) $(CFLAGS) '-DVERSION="$(VERSION)"' -c -o $@ $<
+
+#rs232.o: rs232.c rs232.h
+#	$(CC) $(CFLAGS) '-DVERSION="$(VERSION)"' -c -o $@ $<
+
+
+# Linux-specific plugin
+rp-pppoe.so: plugin/plugin.o plugin/libplugin.a
+	$(CC) -o $@ -shared $^ $(LDFLAGS)
+
+plugin/plugin.o: plugin.c
+	$(CC) -DPLUGIN=1 '-DRP_VERSION="$(VERSION)"' $(CFLAGS) -I$(PPPD_INCDIR) -c -o $@ -fPIC $<
+
+plugin/libplugin.a: plugin/discovery.o plugin/if.o plugin/common.o plugin/debug.o
+	ar -rc $@ $^
+
+plugin/discovery.o: discovery.c
+	$(CC) -DPLUGIN=1 $(CFLAGS) '-DVERSION="$(VERSION)"' -c -o $@ -fPIC $<
+
+plugin/if.o: if.c
+	$(CC) -DPLUGIN=1 $(CFLAGS) '-DVERSION="$(VERSION)"' -c -o $@ -fPIC $<
+
+plugin/debug.o: debug.c
+	$(CC) -DPLUGIN=1 $(CFLAGS) '-DVERSION="$(VERSION)"' -c -o $@ -fPIC $<
+
+plugin/common.o: common.c
+	$(CC) -DPLUGIN=1 $(CFLAGS) '-DVERSION="$(VERSION)"' -c -o $@ -fPIC $<
+
+install: all
+	-mkdir -p $(DESTDIR)$(sbindir)
+	$(install) -m 755 pppoe $(DESTDIR)$(sbindir)
+	$(install) -m 755 pppoe-server $(DESTDIR)$(sbindir)
+	if test -x licensed-only/pppoe-server-control ; then $(install) -m 755 licensed-only/pppoe-server-control $(DESTDIR)$(sbindir); fi
+	if test -x pppoe-relay ; then $(install) -m 755 pppoe-relay $(DESTDIR)$(sbindir); fi
+	if test -x pppoe-sniff; then $(install) -m 755 pppoe-sniff $(DESTDIR)$(sbindir); fi
+	$(install) -m 755 ../scripts/pppoe-connect $(DESTDIR)$(sbindir)
+	$(install) -m 755 ../scripts/pppoe-start $(DESTDIR)$(sbindir)
+	$(install) -m 755 ../scripts/pppoe-status $(DESTDIR)$(sbindir)
+	$(install) -m 755 ../scripts/pppoe-stop $(DESTDIR)$(sbindir)
+	$(install) -m 755 ../scripts/pppoe-setup $(DESTDIR)$(sbindir)
+	-mkdir -p $(DESTDIR)$(docdir)
+	$(install) -m 644 ../doc/CHANGES $(DESTDIR)$(docdir)
+	$(install) -m 644 ../doc/KERNEL-MODE-PPPOE $(DESTDIR)$(docdir)
+	$(install) -m 644 ../doc/HOW-TO-CONNECT $(DESTDIR)$(docdir)
+	$(install) -m 644 ../doc/LICENSE $(DESTDIR)$(docdir)
+	$(install) -m 644 ../README $(DESTDIR)$(docdir)
+	$(install) -m 644 ../SERVPOET $(DESTDIR)$(docdir)
+	$(install) -m 644 ../configs/pap-secrets $(DESTDIR)$(docdir)
+	-mkdir -p $(DESTDIR)$(mandir)/man8
+	for i in $(TARGETS) ; do \
+		if test -f ../man/$$i.8 ; then \
+			$(install) -m 644 ../man/$$i.8 $(DESTDIR)$(mandir)/man8 || exit 1; \
+		fi; \
+	done
+	$(install) -m 644 ../man/pppoe-start.8 $(DESTDIR)$(mandir)/man8
+	$(install) -m 644 ../man/pppoe-stop.8 $(DESTDIR)$(mandir)/man8
+	$(install) -m 644 ../man/pppoe-status.8 $(DESTDIR)$(mandir)/man8
+	$(install) -m 644 ../man/pppoe-connect.8 $(DESTDIR)$(mandir)/man8
+	$(install) -m 644 ../man/pppoe-setup.8 $(DESTDIR)$(mandir)/man8
+	-mkdir -p $(DESTDIR)$(mandir)/man5
+	$(install) -m 644 ../man/pppoe.conf.5 $(DESTDIR)$(mandir)/man5
+	-mkdir -p $(DESTDIR)/etc/ppp
+	-mkdir -p $(DESTDIR)$(PLUGIN_DIR)
+	-echo "# Directory created by rp-pppoe for kernel-mode plugin" > $(DESTDIR)$(PLUGIN_DIR)/README
+	@if test -r rp-pppoe.so; then $(install) -m 755 rp-pppoe.so $(DESTDIR)$(PLUGIN_DIR); fi
+	@for i in pppoe.conf firewall-standalone firewall-masq ; do \
+		if [ ! -f $(DESTDIR)/etc/ppp/$$i ] ; then \
+			$(install) -m 644 ../configs/$$i $(DESTDIR)/etc/ppp ; \
+		else \
+			echo "NOT overwriting existing $(DESTDIR)/etc/ppp/$$i" ;\
+			$(install) -m 644 ../configs/$$i $(DESTDIR)/etc/ppp/$$i-$(VERSION) ;\
+		fi ;\
+	done
+	@if [ ! -f $(DESTDIR)$(PPPOESERVER_PPPD_OPTIONS) ] ; then \
+		$(install) -m 644 ../configs/pppoe-server-options $(DESTDIR)$(PPPOESERVER_PPPD_OPTIONS) ; \
+	else \
+		echo "NOT overwriting existing $(DESTDIR)$(PPPOESERVER_PPPD_OPTIONS)"; \
+		$(install) -m 644 ../configs/pppoe-server-options $(DESTDIR)$(PPPOESERVER_PPPD_OPTIONS)-example ; \
+	fi
+	@if [ -f /etc/redhat-release ] ; then \
+		echo "Looks like a Red Hat system; installing $(DESTDIR)/etc/rc.d/init.d/pppoe" ; \
+		mkdir -p $(DESTDIR)/etc/rc.d/init.d ;\
+		$(install) -m 755 ../scripts/pppoe-init $(DESTDIR)/etc/rc.d/init.d/pppoe ; \
+	fi
+	@if [ -f /etc/turbolinux-release ] ; then \
+		echo "Looks like a TurboLinux system; installing $(DESTDIR)/etc/rc.d/init.d/pppoe" ; \
+		mkdir -p $(DESTDIR)/etc/rc.d/init.d ;\
+		$(install) -m 755 ../scripts/pppoe-init-turbolinux $(DESTDIR)/etc/rc.d/init.d/pppoe ; \
+	fi
+	@if [ -f /etc/SuSE-release ] ; then \
+		echo "Looks like a SuSE Linux system; installing $(DESTDIR)/etc/rc.d/init.d/pppoe" ; \
+		mkdir -p $(DESTDIR)/etc/rc.d/init.d ;\
+		$(install) -m 755 ../scripts/pppoe-init-suse $(DESTDIR)/etc/rc.d/init.d/pppoe ; \
+	fi
+
+	@if [ -f l2tp/handlers/sync-pppd.so ] ; then \
+		mkdir -p $(DESTDIR)/usr/lib/l2tp/plugins ; \
+		$(install) -m 755 l2tp/handlers/sync-pppd.so $(DESTDIR)/usr/lib/l2tp/plugins ; \
+		mkdir -p $(DESTDIR)/etc/l2tp ; \
+		$(install) -m 600 l2tp/l2tp.conf $(DESTDIR)/etc/l2tp/l2tp.conf.example ; \
+	fi
+	@echo ""
+	@echo "Type 'pppoe-setup' to configure the software."
+
+servpoet-tgz: distro-servpoet
+	cd .. && tar cvf servpoet-$(VERSION)$(BETA).tar servpoet-$(VERSION)$(BETA)
+	gzip -f -v -9 ../servpoet-$(VERSION)$(BETA).tar
+	rm -rf ../servpoet-$(VERSION)$(BETA)
+
+tgz: distro
+	cd .. && tar cvf rp-pppoe-$(VERSION)$(BETA).tar rp-pppoe-$(VERSION)$(BETA)
+	gzip -f -v -9 ../rp-pppoe-$(VERSION)$(BETA).tar
+	rm -rf ../rp-pppoe-$(VERSION)$(BETA)
+
+distro-servpoet: distro
+	cp ../servpoet.spec ../rp-pppoe-$(VERSION)$(BETA)
+	$(MAKE) -C licensed-only distro VERSION=$(VERSION) BETA=$(BETA)
+	mv ../rp-pppoe-$(VERSION)$(BETA) ../servpoet-$(VERSION)$(BETA)
+
+distro:
+	rm -rf ../rp-pppoe-$(VERSION)$(BETA)
+	mkdir ../rp-pppoe-$(VERSION)$(BETA)
+	for i in README SERVPOET go go-gui rp-pppoe.spec ; do \
+		cp ../$$i ../rp-pppoe-$(VERSION)$(BETA) || exit 1; \
+	done
+	mkdir ../rp-pppoe-$(VERSION)$(BETA)/gui
+	for i in en.msg ja.msg Makefile.in tkpppoe.in wrapper.c tkpppoe.1 pppoe-wrapper.1 ; do \
+		cp ../gui/$$i ../rp-pppoe-$(VERSION)$(BETA)/gui || exit 1; \
+	done
+	mkdir ../rp-pppoe-$(VERSION)$(BETA)/gui/html
+	for i in mainwin-busy.png mainwin-nonroot.png mainwin.png props-advanced.png props-basic.png props-nic.png props-options.png tkpppoe.html ; do \
+		cp ../gui/html/$$i ../rp-pppoe-$(VERSION)$(BETA)/gui/html || exit 1; \
+	done
+	mkdir ../rp-pppoe-$(VERSION)$(BETA)/configs
+	for i in firewall-masq firewall-standalone pap-secrets pppoe-server-options pppoe.conf ; do \
+		cp ../configs/$$i ../rp-pppoe-$(VERSION)$(BETA)/configs || exit 1; \
+	done
+	mkdir ../rp-pppoe-$(VERSION)$(BETA)/doc
+	for i in CHANGES KERNEL-MODE-PPPOE HOW-TO-CONNECT LICENSE PROBLEMS ; do \
+		cp ../doc/$$i ../rp-pppoe-$(VERSION)$(BETA)/doc || exit 1; \
+	done
+	mkdir ../rp-pppoe-$(VERSION)$(BETA)/man
+	for i in pppoe-connect.8 pppoe-setup.8 pppoe-start.8 pppoe-status.8 pppoe-stop.8 pppoe-server.8 pppoe-sniff.8 pppoe.8 pppoe-relay.8 pppoe.conf.5 ; do \
+		cp ../man/$$i ../rp-pppoe-$(VERSION)$(BETA)/man || exit 1; \
+	done
+	mkdir ../rp-pppoe-$(VERSION)$(BETA)/scripts
+	for i in pppoe-connect.in pppoe-init-suse.in pppoe-init-turbolinux.in pppoe-init.in pppoe-setup.in pppoe-start.in pppoe-stop.in pppoe-status ; do \
+		cp ../scripts/$$i ../rp-pppoe-$(VERSION)$(BETA)/scripts || exit 1; \
+	done
+	mkdir ../rp-pppoe-$(VERSION)$(BETA)/src
+	for i in Makefile.in install-sh common.c config.h.in configure configure.in debug.c discovery.c if.c md5.c md5.h ppp.c pppoe-server.c pppoe-sniff.c pppoe.c pppoe.h pppoe-server.h plugin.c relay.c relay.h ; do \
+		cp ../src/$$i ../rp-pppoe-$(VERSION)$(BETA)/src || exit 1; \
+	done
+	mkdir ../rp-pppoe-$(VERSION)$(BETA)/src/libevent
+	for i in Makefile.in event.c event.h event_tcp.c event_tcp.h eventpriv.h hash.c hash.h event_sig.c ; do \
+		cp ../src/libevent/$$i ../rp-pppoe-$(VERSION)$(BETA)/src/libevent || exit 1; \
+	done
+	mkdir ../rp-pppoe-$(VERSION)$(BETA)/src/plugin
+
+distro-beta: beta-check
+	$(MAKE) distro BETA=-BETA-$(BETA)
+
+tgz-beta: beta-check
+	$(MAKE) tgz BETA=-BETA-$(BETA)
+
+beta-check:
+	@if test "$(BETA)" = "" ; then \
+		echo "Usage: make distro-beta BETA=<x>"; \
+		exit 1; \
+	fi
+
+rpms: tgz
+	cp ../rp-pppoe-$(VERSION).tar.gz /usr/src/redhat/SOURCES
+	gpg --detach-sign /usr/src/redhat/SOURCES/rp-pppoe-$(VERSION).tar.gz
+	cd ..; \
+	rpm -ba rp-pppoe.spec
+	rpm --addsign /usr/src/redhat/SRPMS/rp-pppoe-$(VERSION)-1.src.rpm \
+		/usr/src/redhat/RPMS/i386/rp-pppoe-$(VERSION)-1.i386.rpm \
+		/usr/src/redhat/RPMS/i386/rp-pppoe-gui-$(VERSION)-1.i386.rpm
+
+servpoet-rpms: servpoet-tgz
+	cp ../servpoet-$(VERSION).tar.gz /usr/src/redhat/SOURCES
+	cd .. && rpm -ba servpoet.spec
+
+clean:
+	rm -f *.o pppoe-relay pppoe pppoe-sniff pppoe-server core rp-pppoe.so plugin/*.o plugin/libplugin.a *~
+	test -f licensed-only/Makefile && $(MAKE) -C licensed-only clean || true
+	test -f libevent/Makefile && $(MAKE) -C libevent clean || true
+	test -f l2tp/Makefile && $(MAKE) -C l2tp clean || true
+
+distclean: clean
+	rm -f Makefile config.h config.cache config.log config.status
+	rm -f libevent/Makefile
+	rm -f ../scripts/pppoe-connect ../scripts/pppoe-start ../scripts/pppoe-stop ../scripts/pppoe-init ../scripts/pppoe-setup ../scripts/pppoe-init-suse ../scripts/pppoe-init-turbolinux
+
+update-version:
+	sed -e 's/^Version: .*$$/Version: $(VERSION)/' ../rp-pppoe.spec > ../rp-pppoe.spec.new && mv ../rp-pppoe.spec.new ../rp-pppoe.spec
+	sed -e 's+^Source: .*$$+Source: http://www.roaringpenguin.com/pppoe/rp-pppoe-$(VERSION).tar.gz+' ../rp-pppoe.spec > ../rp-pppoe.spec.new && mv ../rp-pppoe.spec.new ../rp-pppoe.spec
+	test -f ../servpoet.spec && sed -e 's/^Version: .*$$/Version: $(VERSION)/' ../servpoet.spec > ../servpoet.spec.new && mv ../servpoet.spec.new ../servpoet.spec || true
+	test -f ../servpoet.spec && sed -e 's+^Source: .*$$+Source: http://www.roaringpenguin.com/pppoe/servpoet-$(VERSION).tar.gz+' ../servpoet.spec > ../servpoet.spec.new && mv ../servpoet.spec.new ../servpoet.spec || true
+
+# Convenience target for Dianne!  Don't try to use this one.
+km:
+	./configure --enable-plugin=/home/dfs/Archive/PPP/ppp-2.4.0.pppoe4-patched-dfs
+
+licensed-only:
+	$(MAKE) -C licensed-only all VERSION=$(VERSION) SERVPOET_VERSION=$(SERVPOET_VERSION)
+
+l2tp: libevent/libevent.a
+	$(MAKE) -C l2tp all
+
+.PHONY: update-version
+
+.PHONY: clean
+
+.PHONY: distclean
+
+.PHONY: rpms
+
+.PHONY: licensed-only
+
+.PHONY: distro
+
+.PHONY: l2tp
diff -rupN orig_rp-pppoe-3.13/src/relay.c rp-pppoe-3.13/src/relay.c
--- orig_rp-pppoe-3.13/src/relay.c	2018-11-26 06:25:28.000000000 +0800
+++ rp-pppoe-3.13/src/relay.c	2019-10-15 16:15:28.597103696 +0800
@@ -86,6 +86,31 @@ int CleanPipe[2];
 /* Hack for daemonizing */
 #define CLOSEFD 64
 
+/* Debug flag */
+//#define ROB_DEBUG
+
+/* No syslog when debugging! */
+#ifdef ROB_DEBUG
+#   define syslog(_, fmt, args...) printf(fmt "\n", args)
+#endif
+
+/* Data used to replace Relay-Session-Id completely */
+unsigned char currentAddress[ETH_ALEN];
+int           currentIfIndex = -1;
+
+#ifdef ROB_DEBUG
+void printMacAddress(char *denomination, unsigned char *address) {
+    printf("%s: %02x:%02x:%02x:%02x:%02x:%02x\n",
+        denomination,
+        currentAddress[0],
+        currentAddress[1],
+        currentAddress[2],
+        currentAddress[3],
+        currentAddress[4],
+        currentAddress[5]);
+}
+#endif
+
 /**********************************************************************
 *%FUNCTION: keepDescriptor
 *%ARGUMENTS:
@@ -994,11 +1019,12 @@ relayHandlePADI(PPPoEInterface const *if
 		PPPoEPacket *packet,
 		int size)
 {
+#if 0
     PPPoETag tag;
     unsigned char *loc;
-    int i, r;
-
-    int ifIndex;
+    int r, ifIndex;
+#endif
+    int i;
 
     /* Can a client legally be behind this interface? */
     if (!iface->clientOK) {
@@ -1042,6 +1068,7 @@ relayHandlePADI(PPPoEInterface const *if
 	return;
     }
 
+#if 0
     /* Get array index of interface */
     ifIndex = iface - Interfaces;
 
@@ -1061,6 +1088,14 @@ relayHandlePADI(PPPoEInterface const *if
 	   make sense for PADI packets. */
 	return;
     }
+#endif
+    // Save the source MAC address and the ifIndex for later
+    currentIfIndex = iface - Interfaces;
+    memcpy(currentAddress, packet->ethHdr.h_source, ETH_ALEN);
+#ifdef ROB_DEBUG
+    printMacAddress("PADI packet: currentAddress (src)", currentAddress);
+    printf("PADI packet: currentIf (src): %s\n", Interfaces[currentIfIndex].name);
+#endif
 
     /* Broadcast the PADI on all AC-capable interfaces except the interface
        on which it came */
@@ -1088,10 +1123,13 @@ relayHandlePADO(PPPoEInterface const *if
 		PPPoEPacket *packet,
 		int size)
 {
+#if 0
     PPPoETag tag;
     unsigned char *loc;
-    int ifIndex;
     int acIndex;
+    int ifIndex;
+#endif
+    PPPoEInterface *outIface;
 
     /* Can a server legally be behind this interface? */
     if (!iface->acOK) {
@@ -1107,8 +1145,6 @@ relayHandlePADO(PPPoEInterface const *if
 	return;
     }
 
-    acIndex = iface - Interfaces;
-
     /* Source address must be unicast */
     if (BROADCAST(packet->ethHdr.h_source)) {
 	syslog(LOG_ERR,
@@ -1128,6 +1164,7 @@ relayHandlePADO(PPPoEInterface const *if
 	return;
     }
 
+#if 0
     /* Find relay tag */
     loc = findTag(packet, TAG_RELAY_SESSION_ID, &tag);
     if (!loc) {
@@ -1178,15 +1215,29 @@ relayHandlePADO(PPPoEInterface const *if
     /* Replace Relay-ID tag with opposite-direction tag */
     memcpy(loc+TAG_HDR_SIZE, &acIndex, sizeof(acIndex));
     memcpy(loc+TAG_HDR_SIZE+sizeof(ifIndex), packet->ethHdr.h_source, ETH_ALEN);
+#endif
+
+    if (currentIfIndex == -1)
+        return;
+
+#ifdef ROB_DEBUG
+    printMacAddress("PADO packet: currentAddress (dest)", currentAddress);
+    printf("PADO packet: currentIf (dest): %s\n", Interfaces[currentIfIndex].name);
+#endif
 
     /* Set destination address to MAC address in relay ID */
-    memcpy(packet->ethHdr.h_dest, tag.payload + sizeof(ifIndex), ETH_ALEN);
+    memcpy(packet->ethHdr.h_dest, currentAddress, ETH_ALEN);
+
+    /* Update currentAddress and currentIfIndex */
+    outIface = &Interfaces[currentIfIndex];
+    memcpy(currentAddress, packet->ethHdr.h_source, ETH_ALEN);
+    currentIfIndex = iface - Interfaces;
 
     /* Set source address to MAC address of interface */
-    memcpy(packet->ethHdr.h_source, Interfaces[ifIndex].mac, ETH_ALEN);
+    memcpy(packet->ethHdr.h_source, outIface->mac, ETH_ALEN);
 
     /* Send the PADO to the proper client */
-    sendPacket(NULL, Interfaces[ifIndex].discoverySock, packet, size);
+    sendPacket(NULL, outIface->discoverySock, packet, size);
 }
 
 /**********************************************************************
@@ -1204,10 +1255,12 @@ relayHandlePADR(PPPoEInterface const *if
 		PPPoEPacket *packet,
 		int size)
 {
+#if 0
     PPPoETag tag;
     unsigned char *loc;
-    int ifIndex;
-    int cliIndex;
+    int ifIndex, cliIndex;
+#endif
+    PPPoEInterface *outIface;
 
     /* Can a client legally be behind this interface? */
     if (!iface->clientOK) {
@@ -1223,8 +1276,6 @@ relayHandlePADR(PPPoEInterface const *if
 	return;
     }
 
-    cliIndex = iface - Interfaces;
-
     /* Source address must be unicast */
     if (NOT_UNICAST(packet->ethHdr.h_source)) {
 	syslog(LOG_ERR,
@@ -1244,6 +1295,7 @@ relayHandlePADR(PPPoEInterface const *if
 	return;
     }
 
+#if 0
     /* Find relay tag */
     loc = findTag(packet, TAG_RELAY_SESSION_ID, &tag);
     if (!loc) {
@@ -1294,15 +1346,29 @@ relayHandlePADR(PPPoEInterface const *if
     /* Replace Relay-ID tag with opposite-direction tag */
     memcpy(loc+TAG_HDR_SIZE, &cliIndex, sizeof(cliIndex));
     memcpy(loc+TAG_HDR_SIZE+sizeof(ifIndex), packet->ethHdr.h_source, ETH_ALEN);
+#endif
+
+    if (currentIfIndex == -1)
+        return;
+
+#ifdef ROB_DEBUG
+    printMacAddress("PADR packet: currentAddress (dest)", currentAddress);
+    printf("PADR packet: currentIf (dest): %s\n", Interfaces[currentIfIndex].name);
+#endif
 
     /* Set destination address to MAC address in relay ID */
-    memcpy(packet->ethHdr.h_dest, tag.payload + sizeof(ifIndex), ETH_ALEN);
+    memcpy(packet->ethHdr.h_dest, currentAddress, ETH_ALEN);
+
+    /* Update currentAddress and currentIfIndex */
+    outIface = &Interfaces[currentIfIndex];
+    memcpy(currentAddress, packet->ethHdr.h_source, ETH_ALEN);
+    currentIfIndex = iface - Interfaces;
 
     /* Set source address to MAC address of interface */
-    memcpy(packet->ethHdr.h_source, Interfaces[ifIndex].mac, ETH_ALEN);
+    memcpy(packet->ethHdr.h_source, outIface->mac, ETH_ALEN);
 
     /* Send the PADR to the proper access concentrator */
-    sendPacket(NULL, Interfaces[ifIndex].discoverySock, packet, size);
+    sendPacket(NULL, outIface->discoverySock, packet, size);
 }
 
 /**********************************************************************
@@ -1360,6 +1426,7 @@ relayHandlePADS(PPPoEInterface const *if
 	return;
     }
 
+#if 0
     /* Find relay tag */
     loc = findTag(packet, TAG_RELAY_SESSION_ID, &tag);
     if (!loc) {
@@ -1406,7 +1473,13 @@ relayHandlePADS(PPPoEInterface const *if
 	       iface->name);
 	return;
     }
-
+#endif
+    if (currentIfIndex == -1)
+        return;
+#ifdef ROB_DEBUG
+    printMacAddress("PADS packet: currentAddress (dest)", currentAddress);
+    printf("PADS packet: currentIf (dest): %s\n", Interfaces[currentIfIndex].name);
+#endif
     /* If session ID is zero, it's the AC respoding with an error.
        Just relay it; do not create a session */
     if (packet->session != htons(0)) {
@@ -1422,9 +1495,15 @@ relayHandlePADS(PPPoEInterface const *if
 
 	if (!ses) {
 	    /* Create a new session */
+#if 0
 	    ses = createSession(iface, &Interfaces[ifIndex],
 				packet->ethHdr.h_source,
 				loc + TAG_HDR_SIZE + sizeof(ifIndex), packet->session);
+#else
+        ses = createSession(iface, &Interfaces[currentIfIndex],
+				packet->ethHdr.h_source,
+                             currentAddress, packet->session);
+#endif
 	    if (!ses) {
 		/* Can't allocate session -- send error PADS to client and
 		   PADT to server */
@@ -1434,9 +1513,15 @@ relayHandlePADS(PPPoEInterface const *if
 		} else {
 		    hu = NULL;
 		}
+#if 0
 		relaySendError(CODE_PADS, htons(0), &Interfaces[ifIndex],
 			       loc + TAG_HDR_SIZE + sizeof(ifIndex),
 			       hu, "RP-PPPoE: Relay: Unable to allocate session");
+#else
+        relaySendError(CODE_PADS, htons(0), &Interfaces[currentIfIndex],
+                   currentAddress,
+			       hu, "RP-PPPoE: Relay: Unable to allocate session");
+#endif
 		relaySendError(CODE_PADT, packet->session, iface,
 			       packet->ethHdr.h_source, NULL,
 			       "RP-PPPoE: Relay: Unable to allocate session");
@@ -1447,18 +1532,21 @@ relayHandlePADS(PPPoEInterface const *if
 	packet->session = ses->sesNum;
     }
 
+#if 0
     /* Remove relay-ID tag */
     removeBytes(packet, loc, MY_RELAY_TAG_LEN + TAG_HDR_SIZE);
     size -= (MY_RELAY_TAG_LEN + TAG_HDR_SIZE);
+#endif
 
     /* Set destination address to MAC address in relay ID */
-    memcpy(packet->ethHdr.h_dest, tag.payload + sizeof(ifIndex), ETH_ALEN);
+    memcpy(packet->ethHdr.h_dest, currentAddress, ETH_ALEN);
 
     /* Set source address to MAC address of interface */
-    memcpy(packet->ethHdr.h_source, Interfaces[ifIndex].mac, ETH_ALEN);
+    memcpy(packet->ethHdr.h_source, Interfaces[currentIfIndex].mac, ETH_ALEN);
 
     /* Send the PADS to the proper client */
-    sendPacket(NULL, Interfaces[ifIndex].discoverySock, packet, size);
+    sendPacket(NULL, Interfaces[currentIfIndex].discoverySock, packet, size);
+    currentIfIndex = -1; // reset
 }
 
 /**********************************************************************
