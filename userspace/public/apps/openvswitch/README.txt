==============================================================================================
Procedure to add/remove new files to openvswitch userspace(i.e. other than datapath directory)
==============================================================================================

-----------------------------------------------------------------------------------------------------------
Scenario 1: Maintaining the current ovs version and adding new ovs "userspace" files to the current version
-----------------------------------------------------------------------------------------------------------

Step 1: Add/Remove your source and header files in the automake.mk file located in the same directory as the source files(for example: ofproto/automake.mk)

Step 2: Go to the openvswitch untarred directory(for example: openvswitch/openvswitch-2.8.2) and run the following command to autogenerate the makefiles.
   #bash boot.sh
[You can use "find . -newer" command to check what files were autogenerated. 
   For example: Run through the following steps to figure out the files that were autogenerated.
     Step 2a: #touch README.rst (README.rst is located in the openvswitch/openvswitch-2.8.2 directory)
     Step 2b: #bash boot.sh
     Step 2c: #find . -newer README.rst]

Step 3: Following files would be generated.
 
./aclocal.m4
./autom4te.cache
./autom4te.cache/output.1
./autom4te.cache/traces.0
./autom4te.cache/traces.1
./autom4te.cache/requests
./autom4te.cache/output.2
./autom4te.cache/output.0
./autom4te.cache/traces.2
./build-aux
./build-aux/missing
./build-aux/depcomp
./build-aux/config.sub
./build-aux/install-sh
./build-aux/ltmain.sh
./build-aux/compile
./build-aux/config.guess
./configure
./m4
./m4/ltsugar.m4
./m4/ltversion.m4
./m4/ltoptions.m4
./m4/libtool.m4
./m4/lt~obsolete.m4
./datapath
./datapath/Makefile.in
./config.h.in
./Makefile.in

Step 4: Following cache files can be ignored

./autom4te.cache
./autom4te.cache/output.1
./autom4te.cache/traces.0
./autom4te.cache/traces.1
./autom4te.cache/requests
./autom4te.cache/output.2
./autom4te.cache/output.0
./autom4te.cache/traces.2

Step 5: The base versions of the rest of the following autogenerated files have been already checked in.

./aclocal.m4
./build-aux
./build-aux/missing
./build-aux/depcomp
./build-aux/config.sub
./build-aux/install-sh
./build-aux/ltmain.sh
./build-aux/compile
./build-aux/config.guess
./configure
./m4
./m4/ltsugar.m4
./m4/ltversion.m4
./m4/ltoptions.m4
./m4/libtool.m4
./m4/lt~obsolete.m4
./datapath
./datapath/Makefile.in
./config.h.in
./Makefile.in

Step 6: Now, check in ONLY the files that are different from the previous versions in Perforce. Typically, only the Makefile.in has changes to reflect the addition or removal of files.

------------------------------------------------------------------------------------------------------
Scenario 2: Maintaining the current ovs version and adding new "datapath" files to the current version
------------------------------------------------------------------------------------------------------

Step 1: Add/Remove your source and header files in the Modules.mk file located in the datapath directory

Step 2: Go to Step 2 in Scenario 1 and run through the rest of the steps.

--------------------------------------------------------------------------------------------------------------------------------
Scenario 3: Upgrading the current ovs version, check-in the base autogenerated files and then add/remove source and header files
--------------------------------------------------------------------------------------------------------------------------------

Step 1: Get the ovs release tarball you are interested by going to the following webpage and clicking on the appropriate "Updates" link that points to the release.
   https://www.openvswitch.org/download/

Step 2: For example: The version 2.8.2 updates link looks as follows
   https://mail.openvswitch.org/pipermail/ovs-announce/2018-February/000245.html

Step 3: Now do a wget using the tarball link in the "updates" link and download the tarball. For example: v2.8.2 tarball can be downloaded as follows
   #wget http://openvswitch.org/releases/openvswitch-2.8.2.tar.gz

Step 4: Untar the tarball (tar xvzf <tarball name>)

Step 4a: Check automake version of ./Makefile.in, upgrade or downgrade automake of host PC to the version.

Step 5: Go to the openvswitch untarred directory(for example: openvswitch/openvswitch-2.8.2) and run the following command to autogenerate the makefiles
   #bash boot.sh

Step 6: For example following files were generated for v2.8.2 boot.sh run.

./aclocal.m4
./autom4te.cache
./autom4te.cache/output.1
./autom4te.cache/traces.0
./autom4te.cache/traces.1
./autom4te.cache/requests
./autom4te.cache/output.2
./autom4te.cache/output.0
./autom4te.cache/traces.2
./build-aux
./build-aux/missing
./build-aux/depcomp
./build-aux/config.sub
./build-aux/install-sh
./build-aux/ltmain.sh
./build-aux/compile
./build-aux/config.guess
./configure
./m4
./m4/ltsugar.m4
./m4/ltversion.m4
./m4/ltoptions.m4
./m4/libtool.m4
./m4/lt~obsolete.m4
./datapath
./datapath/Makefile.in
./config.h.in
./Makefile.in

Step 7: Following cache files can be ignored

./autom4te.cache
./autom4te.cache/output.1
./autom4te.cache/traces.0
./autom4te.cache/traces.1
./autom4te.cache/requests
./autom4te.cache/output.2
./autom4te.cache/output.0
./autom4te.cache/traces.2

Step 8: Check in the base versions of the rest of the following autogenerated files.

./aclocal.m4
./build-aux
./build-aux/missing
./build-aux/depcomp
./build-aux/config.sub
./build-aux/install-sh
./build-aux/ltmain.sh
./build-aux/compile
./build-aux/config.guess
./configure
./m4
./m4/ltsugar.m4
./m4/ltversion.m4
./m4/ltoptions.m4
./m4/libtool.m4
./m4/lt~obsolete.m4
./datapath
./datapath/Makefile.in
./config.h.in
./Makefile.in

Step 9: Follow scenario 1 or scenario 2 to add/remove source or header files.

step 10: Update check_clean_whitelist in the top build folder
   make clean; make -f build/Makefile check_clean

===========================================================
Procedure to get a ovs git repository using ovs release tag
===========================================================

Step 1: Install git
   #sudo apt install git

Step 2: Clone the ovs git repository
   #git clone https://github.com/openvswitch/ovs.git

Step 3: Get the GIT tree based on the label/tag. For example: the following command gets the ovs version tagged v2.8.2
   #git checkout tags/v2.8.2
