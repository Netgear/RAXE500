#
# Copyright 2019  Hon Hai Precision Ind. Co. Ltd.
#  All Rights Reserved.
# No portions of this material shall be reproduced in any form without the
# written permission of Hon Hai Precision Ind. Co. Ltd.
#
# All information contained in this document is Hon Hai Precision Ind.
# Co. Ltd. company private, proprietary, and trade secret property and
# are protected by international intellectual property laws and treaties.
#

export LINUXDIR=$(KERNEL_PATH)
export KERNELRELEASE := $(shell cat $(KERNEL_PATH)/include/config/kernel.release 2> /dev/null)
LIBDIR=$(TOOLCHAIN_PATH_USER)/lib
USRLIBDIR=$(TOOLCHAIN_PATH_USER)/usr/lib

export PKG_CONFIG_PATH=$(FXCN_PKG_CONFIG_PATH)
export BASEDIR=$(BUILD_DIR)
export BUILDDIR=$(BUILD_DIR)
export PLATFORMDIR := $(BUILD_DIR)/targets/$(PROFILE)
export INSTALLDIR := $(PLATFORMDIR)/fs.install
export TARGETDIR := $(PLATFORMDIR)/fs.install
export TOPDIR := $(LINUXDIR)
export KERNELPATH := $(LINUXDIR)
export MODPATH := ${TARGETDIR}/lib/modules/${KERNELRELEASE}/kernel
export MODLIB := $(TARGETDIR)/lib/modules/$(KERNELRELEASE)
export SRCBASE := $(BUILD_DIR)/userspace/private/apps/wlan/src
export USERAPPS_DIR= $(BUILD_DIR)/userspace
export ROUTERDIR= $(SRCBASE)/../components/router

#
# Cross-compile environment variables
#
export AS		= $(TOOLCHAIN_PATH_USER)/$(TARGET_PLATFORM_CROSS_COMPILE_USER)as
export LD		= $(TOOLCHAIN_PATH_USER)/$(TARGET_PLATFORM_CROSS_COMPILE_USER)ld
export CC		= $(TOOLCHAIN_PATH_USER)/$(TARGET_PLATFORM_CROSS_COMPILE_USER)gcc
export CPP		= $(CC) -E
export AR		= $(TOOLCHAIN_PATH_USER)/$(TARGET_PLATFORM_CROSS_COMPILE_USER)ar
export NM		= $(TOOLCHAIN_PATH_USER)/$(TARGET_PLATFORM_CROSS_COMPILE_USER)nm
export STRIP		= $(TOOLCHAIN_PATH_USER)/$(TARGET_PLATFORM_CROSS_COMPILE_USER)strip
export OBJCOPY		= $(TOOLCHAIN_PATH_USER)/$(TARGET_PLATFORM_CROSS_COMPILE_USER)objcopy
export OBJDUMP		= $(TOOLCHAIN_PATH_USER)/$(TARGET_PLATFORM_CROSS_COMPILE_USER)objdump
export GENKSYMS	= /sbin/genksyms
export DEPMOD		= /sbin/depmod
export MODFLAGS	= -DMODULE
export PERL		= perl
export RANLIB := $(TOOLCHAIN_PATH_USER)/$(TARGET_PLATFORM_CROSS_COMPILE_USER)ranlib
export SIZE := $(TOOLCHAIN_PATH_USER)/$(TARGET_PLATFORM_CROSS_COMPILE_USER)size


export CFLAGS :=
CFLAGS += -Os
CFLAGS += -DLINUX26 -fsigned-char

ifeq ($(CONFIG_BCMWPA2),y)
CFLAGS += -DBCMWPA2
endif

CFLAGS += -I$(ACOSTOPDIR)/include
CFLAGS += -I$(ACOSTOPDIR)/shared
CFLAGS += -I$(BUILD_DIR)

ifeq ($(CONFIG_BCA_HNDROUTER),y)
CFLAGS += -DBCA_HNDROUTER
endif



ifeq ($(CONFIG_NEW_WANDETECT),y)
CFLAGS += -DNEW_WANDETECT
endif

#Foxconn add start, stanley, 01/16/2010 @IGMP
ifeq ($(CONFIG_IGMP_PROXY),y)
CFLAGS += -DIGMP_PROXY
endif
ifeq ($(CONFIG_IGMP_SNOOPING),y)
CFLAGS += -D__CONFIG_IGMP_SNOOPING__
endif
#Foxconn add end, stanley, 01/16/2010 @IGMP
CFLAGS += -DFLASH_SECTOR_128K

CFLAGS += -DIGMP_AS_COMMON_FUNC

#@Russia Static PPPoE
CFLAGS += -DSTATIC_PPPOE

CFLAGS += -DSTA_MODE

# Platform dependent flags
CFLAGS += -DNEW_WLAN_REGION

# Project flags
CFLAGS += -DBCM6755
CFLAGS += -DINCLUDE_MONROE_POWER_LED -DINCLUDE_WAN_LAN_SUBNET -DINCLUDE_BURNSN -DINCLUDE_WCN
CFLAGS += -DINCLUDE_WDS
CFLAGS += -DINCLUDE_QOS -DAG_QOS
CFLAGS += -DINCLUDE_L7_FILTER
CFLAGS += -DBANDWIDTH_DETECT
CFLAGS += -DBANDWIDTH_DETECT_17
CFLAGS += -DMULTIPLE_SSID
CFLAGS += -DINCLUDE_BCM_WPS
CFLAGS += -DX_ST_ML
CFLAGS += -DTF_RESERVED_LAST_MONTH_RECORD
CFLAGS += -DINCLUDE_BURNSKU
CFLAGS += -DMULTI_LANGUAGE_ENHANCE
CFLAGS += -DENABLE_INTERNET_FIRMWARE_UPGRADE
CFLAGS += -DFLASH_SECTOR_SIZE_128K
CFLAGS += -DNVRAM_SIZE_128K
#CFLAGS += -DIOCTRL_GPIO
CFLAGS += -DCHECK_FW_OPTIMIZE
CFLAGS += -DST_ML_SIZE_128K
CFLAGS += -DUSE_UTELNETD
ifeq ($(CONFIG_MULTI_UBIFS_IN_SINGLE_MTD),y)
CFLAGS += -DMULTI_UBIFS_IN_SINGLE_MTD
endif
CFLAGS += -DRESTART_ALL_PROCESSES
CFLAGS += -DSINGLE_FIRMWARE
CFLAGS += -DENABLE_ML
CFLAGS += -DOPEN_SOURCE_SUPPORT
CFLAGS += -DACS_INTF_DETECT_PATCH
CFLAGS +=  -DCONFIG_RUSSIA_IPTV
ifeq ($(CONFIG_GPIO_LED_SWITCH),y)
CFLAGS += -DLED_GPIO_SWITCH
endif
ifeq ($(INCLUDE_FBWIFI_FLAG),y)
CFLAGS += -DFBWIFI_FLAG
endif
ifeq ($(CONFIG_WIFI_BUTTON),y)
CFLAGS += -DINCLUDE_WIFI_BUTTON
endif
#CFLAGS += -DBCM53125
#CFLAGS += -DBCM5301X
CONFIG_LIBNSL=y
CFLAGS += -DINCLUDE_DUAL_BAND
CFLAGS += -DINCLUDE_GET_ST_CHKSUM
CFLAGS += -DUNIFIED_STR_TBL
CFLAGS += -DFIRST_MTD_ROTATION
ifeq ($(CONFIG_WIFI_SCHE),y)
CFLAGS += -DWIFI_ON_OFF_SCHE
endif
CFLAGS += -DAUTO_CONN_24HR
CFLAGS += -DIGMP_PROXY
CFLAGS += -DAP_MODE

ifeq ($(CONFIG_INCLULDE_2ND_5G_RADIO),y)
CFLAGS += -DINCLULDE_2ND_5G_RADIO
endif

ifeq ($(CONFIG_WIFI6G_SUPPORT),y)
CFLAGS += -DINCLUDE_WIFI6G_SUPPORT
endif

## For NAND flash support
CFLAGS += -DNAND_STRING_TABLE -DNAND_POT -DNAND_TRAFFIC_METER -DNAND_FIRMWARE_UPGRADE -DNAND_NVRAM

#added by dennis ,01/02/2013, for ap mode detection
#CFLAGS += -DINCLUDE_DETECT_AP_MODE
CFLAGS += -D__CONFIG_IGMP_SNOOPING__

ifeq ($(INCLUDE_IPV6_FLAG),y)
CFLAGS += -DINCLUDE_IPV6
endif

CFLAGS += -DPRESET_WL_SECURITY
CFLAGS += -DNEW_BCM_WPS_IPC
CFLAGS += -DSUPPORT_AC_MODE
CFLAGS += -DSTA_MODE
CFLAGS += -DPPP_RU_DESIGN
CFLAGS += -DEXT_ACS
CFLAGS += -DARP_PROTECTION
#CFLAGS += -DCONFIG_2ND_5G_BRIDGE_MODE
CFLAGS += -DVLAN_SUPPORT
#CFLAGS += -DCONFIG_2ND_SWITCH
CFLAGS += -DHIDDEN_PAGE_DEBUG
CFLAGS += -DOPENDNS_PARENTAL_CONTROL
CFLAGS += -DSECURITY_ENHANCEMENT

ifeq ($(CONFIG_OPENDNS),y)
CFLAGS += -DOPENDNS_OPTION
endif

ifeq ($(CONFIG_SOAP_API_20),y)
CFLAGS += -DSOAP_API_20
endif

ifeq ($(CONFIG_SOAP_API_ORBI),y)
CFLAGS += -DSOAP_API_ORBI
endif

ifeq ($(CONFIG_OPENSSL),y)
CFLAGS += -DSUPPORT_REMOTE_HTTPS
endif

#Foxconn added start, Wins, 06/01/2011, @auto_check_bandwidth
ifeq ($(CONFIG_QOS_AUTO_CHECK_BW),y)
CFLAGS += -DQOS_AUTO_CHECK_BANDWIDTH
endif
#Foxconn added end, Wins, 06/01/2011, @auto_check_bandwidth

ifeq ($(CONFIG_PPP_RU_DESIGN),y)
CFLAGS += -DPPP_RU_DESIGN
endif

ifeq ($(L2TP_ENABLE_FLAG),y)
CFLAGS += -DINCLUDE_L2TP
endif

ifeq ($(CONFIG_NAT_4096_SESSION),y)
CFLAGS += -DCONFIG_NAT_4096_SESSION
LIB_NAT_CFLAGS += -DCONFIG_NAT_4096_SESSION
endif
ifeq ($(CONFIG_NAT_65536_SESSION),y)
CFLAGS += -DCONFIG_NAT_65536_SESSION
LIB_NAT_CFLAGS += -DCONFIG_NAT_65536_SESSION
endif
CFLAGS += -DNEW_FORWARD_SPEC

ifeq ($(VPN_PASSTHROUGH_GUI_OPTION),y)
CFLAGS += -DVPN_PASSTHROUGH_GUI_OPTION
LIB_NAT_CFLAGS += -DVPN_PASSTHROUGH_GUI_OPTION
endif
ifeq ($(CONFIG_FORWARD_ENHANCEMENT),y)
CFLAGS += -DBRIC_FORWARD_ENHANCEMENT
LIB_NAT_CFLAGS += -DBRIC_FORWARD_ENHANCEMENT
endif
ifeq ($(CONFIG_DOWNLOADER),y)
CFLAGS += -DINCLUDE_DOWNLOADER
LIB_NAT_CFLAGS += -DINCLUDE_DOWNLOADER
endif

ifeq ($(CONFIG_NTP_SYNC_RECORD),y)
CFLAGS += -DNTP_SYNC_RECORD
endif

ifeq ($(CONFIG_WL_ACCESS_RECORD),y)
CFLAGS += -DWL_ACCESS_RECORD
endif

ifeq ($(ENABLE_CDLESS),y)
CFLAGS += -DENABLE_CDLESS
endif

ifeq ($(CONFIG_ISERVER),y)
CFLAGS += -DCONFIG_ISERVER
endif


ifeq ($(CONFIG_RUSSIA_IPTV),y)
CFLAGS += -DCONFIG_RUSSIA_IPTV
endif

ifeq ($(ARP_PROTECTION),y)
CFLAGS += -DARP_PROTECTION
endif

ifeq ($(VLAN_SUPPORT),y)
CFLAGS += -DVLAN_SUPPORT
endif

#Foxconn added start, Wins, 06/22/2011, @WPS v2.0
ifeq ($(CONFIG_WPS_V20),y)
CFLAGS += -DINCLUDE_WPS_V20
endif
#Foxconn added end, Wins, 06/22/2011, @WPS v2.0

#Foxconn added start, Wins, 07/15/2011, @5G_auto_channel
ifeq ($(CONFIG_5G_AUTO_CHANNEL),y)
CFLAGS += -DINCLUDE_5G_AUTO_CHANNEL
endif
#Foxconn added end, Wins, 07/15/2011, @5G_auto_channel


#Foxconn Silver added start, 2011/12/21, for kernel_ntfs
ifeq ($(CONFIG_USE_KERNEL_NTFS),y)
CFLAGS += -DUSE_KERNEL_NTFS
endif
#Foxconn Silver added end, 2011/12/21, for kernel_ntfs

#to support broadcom ctf in acosnat, enable by default
#CFLAGS += -DBCMCTF

# pling added 02/15/2012, for wireless GUI changes
CFLAGS += -DSUPPORT_AC_MODE
ifeq ($(CONFIG_KERNEL_2_6_36),y)
CFLAGS += -DCONFIG_KERNEL_2_6_36
endif

ifeq ($(CONFIG_ACCESSCONTROL),y)
CFLAGS += -DINCLUDE_ACCESSCONTROL
endif

ifeq ($(CONFIG_TIMEMACHINE),y)
CFLAGS += -DINCLUDE_AFP
endif

ifeq ($(CONFIG_DETECT_AP_MODE),y)
CFLAGS += -DINCLUDE_DETECT_AP_MODE
endif

ifeq ($(CONFIG_APP_SYSTEM),y)
CFLAGS += -DINCLUDE_APP_SYSTEM
endif



# Hank add 08/18/2012, for ecosystem support
ifeq ($(CONFIG_ECOSYSTEM_SUPPORT),y)
CFLAGS += -DECOSYSTEM_SUPPORT
endif

ifeq ($(CONFIG_OPENVPN),y)
CFLAGS += -DOPENVPN_SUPPORT
endif

ifeq ($(MTD_NFLASH),y)
CFLAGS += -DMTD_NFLASH
endif

ifeq ($(VIDEO_STREAMING_QOS),y)
CFLAGS += -DVIDEO_STREAMING_QOS
endif

ifeq ($(CONFIG_TXBF_SUPPORT),y)
CFLAGS += -DSUPPORT_TXBF
endif

# Tab Tseng add 05/27/2013, for xbox qos
ifeq ($(CONFIG_QOS_XBOX),y)
CFLAGS += -DQOS_XBOX
endif

ifeq ($(CONFIG_BONJOUR_PRINTER),y)
CFLAGS += -DBONJOUR_PRINTER
endif

# pling added 03/20/2013, for Facebook captive portal 
ifeq ($(INCLUDE_FB_CAPTIVE_PORTAL),y)
CFLAGS += -DFB_CAPTIVE_PORTAL
endif

#kathy added 10/14/2013, for Facebook WiFi 
ifeq ($(INCLUDE_FBWIFI_FLAG),y)
CFLAGS += -DFBWIFI_FLAG
endif

LIB_NAT_CFLAGS += -DINCLUDE_WAN_LAN_SUBNET -DAG_QOS -DBANDWIDTH_DETECT -DMULTIPLE_SSID 
ifeq ($(SAMBA_ENABLE_FLAG),y)
LIB_NAT_CFLAGS += -DSAMBA_ENABLE 
endif

ifeq ($(CONFIG_IMPLICIT_BEAMFORMING),y)
CFLAGS += -DCONFIG_IMPLICIT_BEAMFORMING
endif

ifeq ($(CONFIG_BAND_STEERING),y)
CFLAGS += -DCONFIG_BAND_STEERING
endif

ifeq ($(CONFIG_AIRTIME_FAIRNESS),y)
CFLAGS += -DCONFIG_AIRTIME_FAIRNESS
endif

ifeq ($(CONFIG_CLEAR_CHANNEL_SELECTOR),y)
CFLAGS += -DCONFIG_CLEAR_CHANNEL_SELECTOR
endif

ifeq ($(CONFIG_HIDDEN_PAGE_DEBUG),y)
CFLAGS += -DHIDDEN_PAGE_DEBUG
endif

ifeq ($(CONFIG_ROUTER_SPEC_REV_12),y)
CFLAGS += -DROUTER_SPEC_REV_12
endif

ifeq ($(CONFIG_LED_GPIO_SWITCH),y)
CFLAGS += -DLED_GPIO_SWITCH
endif

ifeq ($(CONFIG_INDEV_WIFI_LED),y)
CFLAGS += -DINDEV_WIFI_LED
endif

ifeq ($(CONFIG_GMAC3_ENABLE),y)
CFLAGS += -DGMAC3_ENABLE
endif

ifeq ($(CONFIG_TREND_IQOS),y)
CFLAGS += -DCONFIG_TREND_IQOS
CFLAGS += -D__CONFIG_TREND_IQOS__
#Foxconn added by Sinclair, 10/16/15 @ BRCM Generic IQOS 
ifeq ($(CONFIG_BRCM_GENERIC_IQOS),y)
CFLAGS += -DBRCM_GENERIC_IQOS
CFLAGS += -D__BRCM_GENERIC_IQOS__
endif
endif

ifeq ($(CONFIG_NF_CONNTRACK),y)
CFLAGS += -DCONFIG_NF_CONNTRACK
endif

ifeq ($(CONFIG_ROUTER_11AC_PRODUCTION),y)
CFLAGS += -DROUTER_11AC_PRODUCTION
endif
ifeq ($(CONFIG_2ND_5G_BRIDGE_MODE),y)
CFLAGS += -DCONFIG_2ND_5G_BRIDGE_MODE
endif

ifeq ($(IPTV6RD_ENABLE_FLAG),y)
CFLAGS	+= -DACOS_IPV6RD
endif

ifeq ($(CONFIG_SPEEDTEST_SUPPORT),y)
CFLAGS += -DSPEEDTEST_SUPPORT
endif

ifeq ($(CONFIG_PORTTRUNKING_SUPPORT),y)
CFLAGS += -DPORT_TRUNKING_SUPPORT
endif

ifeq ($(CONFIG_CTF_CALLBACK),y)
CFLAGS += -DCTF_CALLBACK
endif

#Foxconn add, Snoopy.wu, KWILT support, 06/01/2015
ifeq ($(CONFIG_KWILT),y)
CFLAGS += -DCONFIG_KWILT
endif

ifeq ($(CONFIG_BT_IGMP),y)
CFLAGS += -DBT_IGMP_SUPPORT
endif

ifeq ($(CONFIG_ADMIN_ACCOUNT),y)
CFLAGS += -DCONFIG_ADMIN_ACCOUNT
endif


ifeq ($(CONFIG_IOCTL_NO_POINTER),y)
CFLAGS += -DIOCTL_NO_POINTER
endif

ifeq ($(CONFIG_NETATALK_3_1_8),y)
CFLAGS += -DCONFIG_NETATALK_3_1_8
endif




ifeq ($(CONFIG_WIDE_DHCP6),y)
CFLAGS += -DWIDE_DHCP6
endif


ifeq ($(CONFIG_ARNONAT),y)
CFLAGS += -DCONFIG_ARNONAT
endif

ifeq ($(TRAFFIC_METER_FLAG),y)
CFLAGS += -DINCLUDE_TRAFFIC_METER
LIB_NAT_CFLAGS += -DINCLUDE_TRAFFIC_METER
endif



ifeq ($(CONFIG_ET_CMD_NEW), y)
CFLAGS += -DET_CMD_NEW
endif

ifeq ($(CONFIG_PRODUCT_ALIAS),y)
CFLAGS += -DCONFIG_PRODUCT_ALIAS
endif

ifeq ($(CONFIG_AWS_IOT),y)
CFLAGS += -DINCLUDE_ROUTER_ANALYTICS
endif

ifeq ($(CONFIG_ORANGE_ISP),y)
CFLAGS += -DCONFIG_ORANGE_ISP
endif

ifeq ($(CONFIG_CIRCLE_PARENTAL_CONTROL),y)
CFLAGS += -DCIRCLE_PARENTAL_CONTROL
endif

ifeq ($(CONFIG_CIRCLEV2_PARENTAL_CONTROL),y)
CFLAGS += -DCIRCLEV2_PARENTAL_CONTROL
endif

# jack tseng 08/21/2017 add
ifeq ($(CONFIG_DEVICE_IDENTIFICATION),y)
CFLAGS += -DENABLE_UPDATE_DEVICE_INFO
CFLAGS += -DDEVICE_IDENTIFICATION
CFLAGS += -DENABLE_DEVICE_DETECT
endif

ifeq ($(CONFIG_GUEST_WIFI_SCHE),y)
CFLAGS += -DCONFIG_GUEST_WIFI_SCHE
ifeq ($(CONFIG_GUEST_WIFI_SCHE_DEF_ON),y)
CFLAGS += -DCONFIG_GUEST_WIFI_SCHE_DEF_ON
endif
endif

ifeq ($(CONFIG_HTTPS_FTP_BACKUP),y)
CFLAGS += -DHTTPS_FTP_BACKUP
endif

#foxconn Han edited, 09/21/2017
ifeq ($(CONFIG_GUI30),y)
CFLAGS += -DCONFIG_GUI30
endif

ifeq ($(CONFIG_JWT_AUTH),y)
CFLAGS += -DCONFIG_JWT_AUTH
endif

ifeq ($(CONFIG_GAMING_ROUTER),y)
CFLAGS += -DCONFIG_GAMING_ROUTER
endif

ifeq ($(CONFIG_ORBI_GUI),y)
CFLAGS += -DCONFIG_ORBI_GUI
endif

ifeq ($(CONFIG_ROUTER_AX_GUI),y)
CFLAGS += -DCONFIG_ROUTER_AX_GUI
endif

ifeq ($(CONFIG_ORBI_SATELLITE_GUI),y)
CFLAGS += -DCONFIG_ORBI_SATELLITE_GUI
endif

ifeq ($(CONFIG_80211AX),y)
CFLAGS += -DCONFIG_80211AX
endif

ifeq ($(CONFIG_FAN_SUPPORT),y)
CFLAGS += -DCONFIG_FAN_SUPPORT
endif

ifeq ($(CONFIG_OTP_TOOL_SUPPORT),y)
CFLAGS += -DOTP_TOOL_SUPPORT
endif

ifeq ($(CONFIG_NTGR_CHECKD),y)
CFLAGS += -DCONFIG_NTGR_CHECKD
endif

ifeq ($(CONFIG_INTERNET_TIME_RECORD),y)
CFLAGS += -DINTERNET_TIME_RECORD
endif

CFLAGS += -DQUAD_CORE_CPU

ifeq ($(CONFIG_WAN_AGG),y)
CFLAGS += -DSUPPORT_WAN_AGG
endif

ifeq ($(CONFIG_2DOT5G_WAN),y)
CFLAGS += -DSUPPORT_2DOT5G_WAN
endif

ifeq ($(CONFIG_LAN5_SUPPORT),y)
CFLAGS += -DCONFIG_LAN5_SUPPORT
endif

ifeq ($(CONFIG_OFDMA_FXCN),y)
CFLAGS += -DSUPPORT_OFDMA_FXCN
endif

ifeq ($(CONFIG_THERMAL_IC),y)
CFLAGS += -DSUPPORT_THERMAL_IC
ifeq ($(CONFIG_THERMAL_IC_PCT2075),y)
CFLAGS += -DSUPPORT_THERMAL_IC_PCT2075
endif
ifeq ($(CONFIG_THERMAL_IC_M7533),y)
CFLAGS += -DSUPPORT_THERMAL_IC_M7533
endif
endif
#### USB Related CFLAGS start
ifeq ($(CONFIG_ACOS_USB_STORAGE),y)
CFLAGS += -DACOS_USB_STORAGE
endif

ifeq ($(CONFIG_ACOS_USB_STORAGE),y)
CFLAGS += -DSAMBA_ENABLE
#CFLAGS += -DINCLUDE_USB_LED
CFLAGS += -DHTTP_ACCESS_USB
CFLAGS += -DMAX_USB_ACCESS
CFLAGS += -DFTP_ACCESS_USB
CFLAGS += -DCONFIG_SAMBA_NO_RESTART
endif
ifeq ($(CONFIG_SAMBA_NO_RESTART),y)
CFLAGS += -DSAMBA_NO_RESTART
endif

ifeq ($(CONFIG_REMOTE_USB_PROTECT),y)
CFLAGS += -DCONFIG_REMOTE_USB_PROTECT
endif

ifeq ($(CONFIG_USE_KERNEL_USB_PRINTER),y)
CFLAGS += -DCONFIG_USE_KERNEL_USB_PRINTER
endif

ifeq ($(CONFIG_REMOTE_SMB_CONF),y)
CFLAGS += -DREMOTE_SMB_CONF
endif

ifeq ($(CONFIG_DLNA),y)
CFLAGS += -DDLNA
#CFLAGS += -DDLNA_DEBUG
endif
#### USB Related CFLAGS end ####

#### NTGR SERVICE CHECK DAEMON start ####
ifeq ($(CONFIG_NAT_ROUTER),y)
CFLAGS += -DNTGR_SRV_CHECKD
ifeq ($(CONFIG_AWS_JSON),y)
CFLAGS += -DAWS_JSON
endif
endif
#### NTGR SERVICE CHECK DAEMON end ####

#### NTGR XCLOUD related CFLAGS start ####
ifeq ($(CONFIG_CLOUD_XAGENT_CONF),y)
CFLAGS += -DXAGENT_CLOUD_SUPPORT
endif

ifeq ($(CONFIG_READYCLOUD_NEW_PATH),y)
CFLAGS += -DCONFIG_READYCLOUD_NEW_PATH
endif

ifeq ($(CONFIG_REMOTE_USER_CONF),y)
CFLAGS += -DREMOTE_USER_CONF
endif

ifeq ($(CONFIG_USERSETUP),y)
CFLAGS += -DUSERSETUP_SUPPORT
endif
#### NTGR XCLOUD related CFLAGS end ####

#### NTGR MESH Related FLAFS start ####
ifeq ($(CONFIG_BRCM_EZ_MESH),y)
CFLAGS += -DBRCM_EZ_MESH
endif
ifeq ($(CONFIG_BRCM_EZ_MESH_BASE),y)
CFLAGS += -DBRCM_EZ_MESH_BASE
CFLAGS += -DMESH_ROOT_AGENT
endif
ifeq ($(CONFIG_BRCM_EZ_MESH_SATELLITE),y)
CFLAGS += -DBRCM_EZ_MESH_SATELLITE
CFLAGS += -DMESH_SATELLITE
endif
ifeq ($(CONFIG_BRCM_EZ_MESH_TRIBAND),y)
CFLAGS += -DBRCM_EZ_MESH_TRIBAND
endif
#### NTGR MESH Related FLAFS end ####

ifeq ($(CONFIG_ACOS_WPSD_HOSTAPD),y)
CFLAGS += -DACOS_WPSD_HOSTAPD
endif

ifeq ($(CONFIG_ACOS_WPSD_AP_PIN_ENABLE),y)
CFLAGS += -DACOS_WPSD_AP_PIN_ENABLE
endif

ifeq ($(CONFIG_LED_CONTROL_PAGE),y)
CFLAGS += -DCONFIG_LED_CONTROL_PAGE
endif

ifeq ($(CONFIG_ACOS_DEBUG_LOG),y)
CFLAGS += -DACOS_DEBUG_LOG
endif

ifeq ($(CONFIG_ACOS_MISC_MODULE),y)
CFLAGS += -DACOS_MISC_MODULE
endif

ifeq ($(CONFIG_FXCN_WATCH_DOG),y)
CFLAGS += -DFXCN_WATCH_DOG
endif

ifeq ($(CONFIG_BR_PACKET_FILTER),y)
CFLAGS += -DBR_PACKET_FILTER
endif

ifeq ($(CONFIG_ACOS_PRINT_PACKET),y)
CFLAGS += -DACOS_PRINT_PACKET
endif

ifeq ($(CONFIG_BR_DEVICE_DETECT),y)
CFLAGS += -DBR_DEVICE_DETECT
endif

ifeq ($(CONFIG_CONNECTION_DEBUG),y)
CFLAGS += -DCONNECTION_DEBUG
endif

ifeq ($(CONFIG_REMOTE_DISABLED),y)
CFLAGS += -DREMOTE_DISABLED
endif

ifeq ($(CONFIG_MULTI_THREAD_HTTPD),y)
CFLAGS += -DMULTI_THREAD_HTTPD -DMESH_UPDATEFIRMWARE_ENHANCEMENT
endif

ifeq ($(CONFIG_SOAP_AGENT_CONFIGURE_SUPPORT),y)
CFLAGS += -DSOAP_AGENT_CONFIGURE_SUPPORT
endif

#### 19.1 SDK flags start ####
ifeq ($(CONFIG_BUILD_IN_ENVRAM),y)
CFLAGS += -DBUILD_IN_ENVRAM
endif
#### 19.1 SDK flags end ####

#### DAL / ARMOR / CFU / FIN
ifeq ($(CONFIG_DAL),y)
CFLAGS += -DCONFIG_DAL
ifeq ($(CONFIG_DAL_FOR_DIL),y)
CFLAGS += -DCONFIG_DAL_FOR_DIL
endif
ifeq ($(CONFIG_DAL_FOR_ARMOR),y)
CFLAGS += -DCONFIG_DAL_FOR_ARMOR
endif
ifeq ($(CONFIG_DAL_FOR_ARMOR_UPDATER),y)
CFLAGS += -DCONFIG_DAL_FOR_ARMOR_UPDATER
endif
ifeq ($(CONFIG_DAL_FOR_CFU),y)
CFLAGS += -DCONFIG_DAL_FOR_CFU
endif
endif

ifeq ($(CONFIG_FIRMWARE_UPGRADE_WEEKLY),y)
CFLAGS += -DFIRMWARE_UPGRADE_WEEKLY
endif

#### Funjsq
ifeq ($(CONFIG_FUNJSQ),y)
CFLAGS += -DCONFIG_FUNJSQ
endif

### SSO
ifeq ($(CONFIG_SSO),y)
CFLAGS += -DCONFIG_SSO
endif

ifeq ($(CONFIG_HTTP_SIGSEGV),y)
CFLAGS +=  -DHTTP_SIGSEGV_DEBUG
endif

ifeq ($(CONFIG_NEW_LED_CONTROL),y)
CFLAGS += -DNEW_LED_CONTROL
endif

ifeq ($(CONFIG_AWS_NEW_ALIAS_CONTROL),y)
CFLAGS += -DAWS_NEW_ALIAS_CONTROL
endif

ifeq ($(CONFIG_ACOS_SHARED_NVRAM),y)
CFLAGS += -DACOS_SHARED_NVRAM
endif

ifeq ($(CONFIG_ACOS_SHARED_NVRAM_PSI_CONVERTION),y)
CFLAGS += -DACOS_SHARED_NVRAM_PSI_CONVERTION
endif

ifeq ($(CONFIG_ACOS_FS_BOARD_DATA),y)
CFLAGS	+= -DACOS_FS_BOARD_DATA
endif

ifeq ($(CONFIG_ACOS_GPIO),y)
CFLAGS	+= -DACOS_GPIO
endif

ifeq ($(CONFIG_ACOS_HOTPLUG),y)
CFLAGS	+= -DACOS_HOTPLUG
endif

### Project relative, to be removed later...
ifeq ($(CONFIG_BCM6750),y)
CFLAGS += -DBCM6750
endif
ifeq ($(CONFIG_BCM6755),y)
CFLAGS += -DBCM6755
endif

ifeq ($(CONFIG_MR60),y)
CFLAGS += -DMR60
endif
ifeq ($(CONFIG_MS60),y)
CFLAGS += -DMS60
endif
ifeq ($(CONFIG_MR80),y)
CFLAGS += -DMR60 -DMR80
endif
ifeq ($(CONFIG_MS80),y)
CFLAGS += -DMS60 -DMS80
endif
ifeq ($(CONFIG_RAX50),y)
CFLAGS += -DRAX50
endif
ifeq ($(CONFIG_RAX20),y)
CFLAGS += -DRAX20
endif
ifeq ($(CONFIG_RAX40v2),y)
CFLAGS += -DRAX40v2
endif

ifeq ($(CONFIG_U12H414T00),y)
CFLAGS += -DU12H414T00
endif
ifeq ($(CONFIG_U12H414T10),y)
CFLAGS += -DU12H414T10
endif
ifeq ($(CONFIG_U12H443T00),y)
CFLAGS += -DU12H443T00
endif
ifeq ($(CONFIG_U12H444T00),y)
CFLAGS += -DU12H444T00
endif
ifeq ($(CONFIG_U12H444T00),y)
CFLAGS += -DU12H444T00
endif
ifeq ($(CONFIG_U12H425T00),y)
CFLAGS += -DU12H425T00
endif
ifeq ($(CONFIG_U12H401T00),y)
CFLAGS += -DU12H401T00
endif
ifeq ($(CONFIG_U12H446T00),y)
CFLAGS += -DU12H446T00
endif
ifeq ($(CONFIG_TURN_OFF_AVS),y)
CFLAGS += -DCONFIG_TURN_OFF_AVS
endif

ifeq ($(CONFIG_BRCM_CMS_SUPPORT),y)
CFLAGS += -DBRCM_CMS_SUPPORT
LDFLAGS +=  -L$(INSTALLDIR)/lib
LDFLAGS += -ldl -lstaged -ljson-c
LDFLAGS += -lwlmdm -lmdm_db -lcms_core -lcms_qdm -lcms_dal -lnanoxml -lmdm_cbk_core -lmdm_cbk_sysmgmt -lmdm_cbk_devinfo -lmdm_cbk_wifi
LDFLAGS += -lvlanctl -lpwrctl -lethswctl -lbridgeutil -ltmctl -lrdpactl -lbdmf -lbcmmcast -lwlsysutil -lcms_util -lbcm_flashutil
LDFLAGS += -lbcm_boardctl -lbcm_util -lsys_util -lgen_util 
LDFLAGS += -lcms_msg
LDFLAGS += -lethctl
LDFLAGS += -L$(INSTALLDIR)/usr/lib
LDFLAGS += -lshared
endif

ifeq ($(CONFIG_BCA_HNDROUTER),y)
CFLAGS += -DBCA_HNDROUTER
endif

ifeq ($(CONFIG_LITE_SYSTEM_UTIL_LIB),y)
CFLAGS  += -I. -I$(ACOSTOPDIR)/abLitLib
LDFLAGS += -L$(ACOSTOPDIR)/abLitLib -labLit
endif

ifeq ($(CONFIG_ACOS_SHARED_NVRAM),y)
LDFLAGS	+=  -L$(ACOSTOPDIR)/lib/libnvram -lacos_nvram
else
LDFLAGS	+=  -L$(ACOSTOPDIR)/nvram -lacos_nvram
endif

ifeq ($(CONFIG_ACOSNAT),y)
CFLAGS	+= -D__LINUX__ -DINCLUDE_ACOS_NAT
ifeq ($(FW_TYPE),JP)
CFLAGS  += -I$(ACOSTOPDIR)/acos_nat_cli_mpoe/include
LDFLAGS	+= -L$(ACOSTOPDIR)/acos_nat_cli_mpoe -lnat
else
CFLAGS  += -I$(ACOSTOPDIR)/acos_nat_cli/include
LDFLAGS	+= -L$(ACOSTOPDIR)/acos_nat_cli -lnat
endif
else ifeq ($(CONFIG_ARNONAT),y)
CFLAGS	+= -D__LINUX__
CFLAGS  += -I$(ACOSTOPDIR)/arno_nat_cli/include
LDFLAGS	+=  -L$(ACOSTOPDIR)/arno_nat_cli -lnat
endif

### USB modularization
ifeq ($(CONFIG_ACOS_USB_STORAGE),y)
CFLAGS += -DACOS_USB_STORAGE
endif

ifeq ($(CONFIG_ACOS_USE_UBOOT),y)
CFLAGS += -DACOS_USE_UBOOT
endif

ifeq ($(CONFIG_USE_PPPOE_PLUGINS),y)
CFLAGS += -DUSE_PPPOE_PLUGINS
endif

ifeq ($(CONFIG_SECURITY_ENHANCEMENT_HTTPS),y)
CFLAGS += -DSECURITY_ENHANCEMENT_HTTPS
endif
