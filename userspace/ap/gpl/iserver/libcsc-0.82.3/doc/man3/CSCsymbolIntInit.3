CSCsymbolIntInit(3)

NAME
        CSCsymbolIntInit - initialize a integer symbol

SYNOPSYS
        #include "libcsc.h"

        int   CSCsymbolIntInit (
                                     CSCsymbolType*   const symbol,
                               const char*            const symName,
                                     long                   symType,
                                     int                    symVal
                               );

RETURN VALUE
        CSC_OK ........ successful

        CSC_BADARG .... symbol or symName is equal to NULL

DESCRIPTION
        CSCsymbolIntInit() initializes the symbol pointed to by `symbol' with
        `symName', `symType', and `symVal'. Client code probably should use the
        same `symType' value for all integer symbols, and `symName' probably
        should be the ASCII string equivalent of `symVal'.

BUGS
        The pointer `symName' is copied into the symbol structure; therefore, if
        `symName' is subsequently freed, then the newly initialized symbol will
        have an aliasing error (pointer to freed memory).

        And remember:   CSCsymbolIntDel() will try to deallocate the name, so
                        it won't be happy if the name was not dynamically
                        allocated.

HINT
        The symbol's valueFlag field is set to 1.

SEE ALSO
        CSCsymbolFloatInit(3)
        CSCsymbolPtrInit(3)
        CSCsymbolIntNew(3)
        CSCsymbolFloatNew(3)
        CSCsymbolPtrNew(3)
        CSCsymbolIntDel(3)
        CSCsymbolFloatDel(3)
        CSCsymbolPtrDel(3)
        CSCsymbolIntWrite(3)
        CSCsymbolFloatWrite(3)
        CSCsymbolPtrWrite(3)
        CSCsymbolDup(3)
        CSCsymbolDel(3)
