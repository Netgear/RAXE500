/* soapStub.h
   Generated by gSOAP 2.7.11 from LeafNets.h
   Copyright(C) 2000-2008, Robert van Engelen, Genivia Inc. All Rights Reserved.
   This part of the software is released under one of the following licenses:
   GPL, the gSOAP public license, or Genivia's license for commercial use.
*/

#ifndef soapStub_H
#define soapStub_H
#include "stdsoap2.h"
#ifdef __cplusplus
extern "C" {
#endif

/******************************************************************************\
 *                                                                            *
 * Enumerations                                                               *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Classes and Structs                                                        *
 *                                                                            *
\******************************************************************************/


#if 0 /* volatile type: do not redeclare here */

#endif

#ifndef SOAP_TYPE_xsd__base64Binary
#define SOAP_TYPE_xsd__base64Binary (7)
/* Base64 schema type: */
struct xsd__base64Binary
{
	unsigned char *__ptr;
	int __size;
	char *id;	/* optional element of type xsd:string */
	char *type;	/* optional element of type xsd:string */
	char *options;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns2__Contact
#define SOAP_TYPE_ns2__Contact (11)
/* ns2:Contact */
struct ns2__Contact
{
	char *email;	/* optional element of type xsd:string */
	char *fname;	/* optional element of type xsd:string */
	char *lname;	/* optional element of type xsd:string */
	int *userStatus;	/* optional element of type xsd:int */
	char *username;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns2__Network
#define SOAP_TYPE_ns2__Network (13)
/* ns2:Network */
struct ns2__Network
{
	LONG64 *id;	/* optional element of type xsd:long */
	struct ArrayOf_USCORExsd_USCOREanyType *members;	/* optional element of type ArrayOf_xsd_anyType */
	char *name;	/* optional element of type xsd:string */
	char *owner;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns2__Member
#define SOAP_TYPE_ns2__Member (18)
/* ns2:Member */
struct ns2__Member
{
	int *status;	/* optional element of type xsd:int */
	char *username;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns2__User
#define SOAP_TYPE_ns2__User (19)
/* ns2:User */
struct ns2__User
{
	char *password;	/* optional element of type xsd:string */
	int *status;	/* optional element of type xsd:int */
	char *username;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns2__IPAddress
#define SOAP_TYPE_ns2__IPAddress (20)
/* ns2:IPAddress */
struct ns2__IPAddress
{
	char *ip;	/* optional element of type xsd:string */
	char *username;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns2__IPAttr
#define SOAP_TYPE_ns2__IPAttr (21)
/* ns2:IPAttr */
struct ns2__IPAttr
{
	LONG64 *lvalue;	/* optional element of type xsd:long */
	char *name;	/* optional element of type xsd:string */
	char *value;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns2__SystemNotification
#define SOAP_TYPE_ns2__SystemNotification (22)
/* ns2:SystemNotification */
struct ns2__SystemNotification
{
	int *active;	/* optional element of type xsd:int */
	char *description;	/* optional element of type xsd:string */
	time_t *enddate;	/* optional element of type xsd:dateTime */
	LONG64 *id;	/* optional element of type xsd:long */
	char *reminder;	/* optional element of type xsd:string */
	time_t *startdate;	/* optional element of type xsd:dateTime */
};
#endif

#ifndef SOAP_TYPE_ns2__UserAttr
#define SOAP_TYPE_ns2__UserAttr (25)
/* ns2:UserAttr */
struct ns2__UserAttr
{
	LONG64 *lvalue;	/* optional element of type xsd:long */
	char *name;	/* optional element of type xsd:string */
	char *value;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns2__UserStats
#define SOAP_TYPE_ns2__UserStats (26)
/* ns2:UserStats */
struct ns2__UserStats
{
	LONG64 *numActive;	/* optional element of type xsd:long */
	LONG64 *numSignup;	/* optional element of type xsd:long */
	LONG64 *numTotal;	/* optional element of type xsd:long */
};
#endif

#ifndef SOAP_TYPE_ns3__Vector
#define SOAP_TYPE_ns3__Vector (27)
/* ns3:Vector */
struct ns3__Vector
{
	int __sizeitem;	/* sequence of elements <item> */
	char **item;	/* optional element of type xsd:anyType */
};
#endif

#ifndef SOAP_TYPE_ns4__Notification
#define SOAP_TYPE_ns4__Notification (29)
/* ns4:Notification */
struct ns4__Notification
{
	LONG64 *id;	/* optional element of type xsd:long */
	int *type;	/* optional element of type xsd:int */
	char *username;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns4__NotificationType
#define SOAP_TYPE_ns4__NotificationType (30)
/* ns4:NotificationType */
struct ns4__NotificationType
{
#ifdef WITH_NOEMPTYSTRUCT
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#ifndef SOAP_TYPE_ns5__PeerAccess
#define SOAP_TYPE_ns5__PeerAccess (31)
/* ns5:PeerAccess */
struct ns5__PeerAccess
{
	time_t *access;	/* optional element of type xsd:dateTime */
	LONG64 *updatenum;	/* optional element of type xsd:long */
	char *username;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns5__PeerAssist
#define SOAP_TYPE_ns5__PeerAssist (32)
/* ns5:PeerAssist */
struct ns5__PeerAssist
{
	char *addr;	/* optional element of type xsd:string */
	LONG64 *id;	/* optional element of type xsd:long */
	char *name;	/* optional element of type xsd:string */
	int *port;	/* optional element of type xsd:int */
	int *state;	/* optional element of type xsd:int */
};
#endif

#ifndef SOAP_TYPE_ns5__PeerAssistAttr
#define SOAP_TYPE_ns5__PeerAssistAttr (33)
/* ns5:PeerAssistAttr */
struct ns5__PeerAssistAttr
{
	char *name;	/* optional element of type xsd:string */
	time_t *timestamp;	/* optional element of type xsd:dateTime */
	char *value;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns5__PeerEvent
#define SOAP_TYPE_ns5__PeerEvent (34)
/* ns5:PeerEvent */
struct ns5__PeerEvent
{
	LONG64 *id;	/* optional element of type xsd:long */
	time_t *timestamp;	/* optional element of type xsd:dateTime */
	int *type;	/* optional element of type xsd:int */
	char *username;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns5__PeerConnection
#define SOAP_TYPE_ns5__PeerConnection (35)
/* ns5:PeerConnection */
struct ns5__PeerConnection
{
	LONG64 *assistId;	/* optional element of type xsd:long */
	int *cndir;	/* optional element of type xsd:int */
	int *cntry;	/* optional element of type xsd:int */
	int *cntype;	/* optional element of type xsd:int */
	int *connectStatus;	/* optional element of type xsd:int */
	LONG64 *id;	/* optional element of type xsd:long */
	struct ArrayOf_USCORExsd_USCOREanyType *info;	/* optional element of type ArrayOf_xsd_anyType */
	char *initiator;	/* optional element of type xsd:string */
	int *state;	/* optional element of type xsd:int */
	time_t *timestamp;	/* optional element of type xsd:dateTime */
};
#endif

#ifndef SOAP_TYPE_ns5__PeerConnectionConnectStatus
#define SOAP_TYPE_ns5__PeerConnectionConnectStatus (36)
/* ns5:PeerConnectionConnectStatus */
struct ns5__PeerConnectionConnectStatus
{
#ifdef WITH_NOEMPTYSTRUCT
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#ifndef SOAP_TYPE_ns5__PeerConnectionConnectedStatus
#define SOAP_TYPE_ns5__PeerConnectionConnectedStatus (37)
/* ns5:PeerConnectionConnectedStatus */
struct ns5__PeerConnectionConnectedStatus
{
#ifdef WITH_NOEMPTYSTRUCT
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#ifndef SOAP_TYPE_ns5__PeerConnectionInfo
#define SOAP_TYPE_ns5__PeerConnectionInfo (38)
/* ns5:PeerConnectionInfo */
struct ns5__PeerConnectionInfo
{
	int *connectedStatus;	/* optional element of type xsd:int */
	char *inip;	/* optional element of type xsd:string */
	int *inport;	/* optional element of type xsd:int */
	char *ip;	/* optional element of type xsd:string */
	int *port;	/* optional element of type xsd:int */
	char *username;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns5__PeerConnectionState
#define SOAP_TYPE_ns5__PeerConnectionState (39)
/* ns5:PeerConnectionState */
struct ns5__PeerConnectionState
{
#ifdef WITH_NOEMPTYSTRUCT
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#ifndef SOAP_TYPE_ns5__PeerConnectionStats
#define SOAP_TYPE_ns5__PeerConnectionStats (40)
/* ns5:PeerConnectionStats */
struct ns5__PeerConnectionStats
{
	LONG64 *numFormed;	/* optional element of type xsd:long */
	LONG64 *numOpened;	/* optional element of type xsd:long */
	LONG64 *numTotal;	/* optional element of type xsd:long */
};
#endif

#ifndef SOAP_TYPE_ns5__PeerConnectionType
#define SOAP_TYPE_ns5__PeerConnectionType (41)
/* ns5:PeerConnectionType */
struct ns5__PeerConnectionType
{
#ifdef WITH_NOEMPTYSTRUCT
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#ifndef SOAP_TYPE_ns5__PeerEventType
#define SOAP_TYPE_ns5__PeerEventType (42)
/* ns5:PeerEventType */
struct ns5__PeerEventType
{
#ifdef WITH_NOEMPTYSTRUCT
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#ifndef SOAP_TYPE_ns5__PeerRegister
#define SOAP_TYPE_ns5__PeerRegister (43)
/* ns5:PeerRegister */
struct ns5__PeerRegister
{
	time_t *timestamp;	/* optional element of type xsd:dateTime */
	LONG64 *updatenum;	/* optional element of type xsd:long */
	char *username;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns2__Usert
#define SOAP_TYPE_ns2__Usert (44)
/* ns2:Usert */
struct ns2__Usert
{
	char *password;	/* optional element of type xsd:string */
	int *status;	/* optional element of type xsd:int */
	char *username;	/* optional element of type xsd:string */
	time_t *timestamp;	/* optional element of type xsd:dateTime */
};
#endif

#ifndef SOAP_TYPE_ArrayOf_USCORExsd_USCOREanyType
#define SOAP_TYPE_ArrayOf_USCORExsd_USCOREanyType (16)
/* Sequence of xsd:anyType schema type: */
struct ArrayOf_USCORExsd_USCOREanyType
{
	char **__ptr;
	int __size;
};
#endif

#ifndef SOAP_TYPE_ns4__NetworkNotification
#define SOAP_TYPE_ns4__NetworkNotification (45)
/* ns4:NetworkNotification */
struct ns4__NetworkNotification
{
	LONG64 *id;	/* optional element of type xsd:long */
	int *type;	/* optional element of type xsd:int */
	char *username;	/* optional element of type xsd:string */
	LONG64 *network;	/* optional element of type xsd:long */
};
#endif

#ifndef SOAP_TYPE_ns4__NotificationIndex
#define SOAP_TYPE_ns4__NotificationIndex (46)
/* ns4:NotificationIndex */
struct ns4__NotificationIndex
{
	LONG64 *id;	/* optional element of type xsd:long */
	int *type;	/* optional element of type xsd:int */
	char *username;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns5__PeerConnectionEvent
#define SOAP_TYPE_ns5__PeerConnectionEvent (47)
/* ns5:PeerConnectionEvent */
struct ns5__PeerConnectionEvent
{
	LONG64 *id;	/* optional element of type xsd:long */
	time_t *timestamp;	/* optional element of type xsd:dateTime */
	int *type;	/* optional element of type xsd:int */
	char *username;	/* optional element of type xsd:string */
	int *cndir;	/* optional element of type xsd:int */
	int *cntry;	/* optional element of type xsd:int */
	LONG64 *connection;	/* optional element of type xsd:long */
};
#endif

#ifndef SOAP_TYPE_ns5__PeerEventIndex
#define SOAP_TYPE_ns5__PeerEventIndex (48)
/* ns5:PeerEventIndex */
struct ns5__PeerEventIndex
{
	LONG64 *id;	/* optional element of type xsd:long */
	time_t *timestamp;	/* optional element of type xsd:dateTime */
	int *type;	/* optional element of type xsd:int */
	char *username;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns4__NetworkMemberNotification
#define SOAP_TYPE_ns4__NetworkMemberNotification (49)
/* ns4:NetworkMemberNotification */
struct ns4__NetworkMemberNotification
{
	LONG64 *network;	/* optional element of type xsd:long */
	LONG64 *id;	/* optional element of type xsd:long */
	int *type;	/* optional element of type xsd:int */
	char *username;	/* optional element of type xsd:string */
	char *member;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns4__DeleteNetworkNotification
#define SOAP_TYPE_ns4__DeleteNetworkNotification (50)
/* ns4:DeleteNetworkNotification */
struct ns4__DeleteNetworkNotification
{
	LONG64 *network;	/* optional element of type xsd:long */
	LONG64 *id;	/* optional element of type xsd:long */
	int *type;	/* optional element of type xsd:int */
	char *username;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns4__InviteNetworkNotification
#define SOAP_TYPE_ns4__InviteNetworkNotification (51)
/* ns4:InviteNetworkNotification */
struct ns4__InviteNetworkNotification
{
	LONG64 *network;	/* optional element of type xsd:long */
	LONG64 *id;	/* optional element of type xsd:long */
	int *type;	/* optional element of type xsd:int */
	char *username;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns5__PeerConnectBusyEvent
#define SOAP_TYPE_ns5__PeerConnectBusyEvent (52)
/* ns5:PeerConnectBusyEvent */
struct ns5__PeerConnectBusyEvent
{
	int *cndir;	/* optional element of type xsd:int */
	int *cntry;	/* optional element of type xsd:int */
	LONG64 *connection;	/* optional element of type xsd:long */
	LONG64 *id;	/* optional element of type xsd:long */
	time_t *timestamp;	/* optional element of type xsd:dateTime */
	int *type;	/* optional element of type xsd:int */
	char *username;	/* optional element of type xsd:string */
	char *peer;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns5__PeerConnectErrorEvent
#define SOAP_TYPE_ns5__PeerConnectErrorEvent (53)
/* ns5:PeerConnectErrorEvent */
struct ns5__PeerConnectErrorEvent
{
	int *cndir;	/* optional element of type xsd:int */
	int *cntry;	/* optional element of type xsd:int */
	LONG64 *connection;	/* optional element of type xsd:long */
	LONG64 *id;	/* optional element of type xsd:long */
	time_t *timestamp;	/* optional element of type xsd:dateTime */
	int *type;	/* optional element of type xsd:int */
	char *username;	/* optional element of type xsd:string */
	char *errorstr;	/* optional element of type xsd:string */
	char *peer;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns5__PeerConnectEvent
#define SOAP_TYPE_ns5__PeerConnectEvent (54)
/* ns5:PeerConnectEvent */
struct ns5__PeerConnectEvent
{
	int *cndir;	/* optional element of type xsd:int */
	int *cntry;	/* optional element of type xsd:int */
	LONG64 *connection;	/* optional element of type xsd:long */
	LONG64 *id;	/* optional element of type xsd:long */
	time_t *timestamp;	/* optional element of type xsd:dateTime */
	int *type;	/* optional element of type xsd:int */
	char *username;	/* optional element of type xsd:string */
	char *ip;	/* optional element of type xsd:string */
	char *peer;	/* optional element of type xsd:string */
	int *port;	/* optional element of type xsd:int */
	int *role;	/* optional element of type xsd:int */
};
#endif

#ifndef SOAP_TYPE_ns5__PeerConnectRejectEvent
#define SOAP_TYPE_ns5__PeerConnectRejectEvent (55)
/* ns5:PeerConnectRejectEvent */
struct ns5__PeerConnectRejectEvent
{
	int *cndir;	/* optional element of type xsd:int */
	int *cntry;	/* optional element of type xsd:int */
	LONG64 *connection;	/* optional element of type xsd:long */
	LONG64 *id;	/* optional element of type xsd:long */
	time_t *timestamp;	/* optional element of type xsd:dateTime */
	int *type;	/* optional element of type xsd:int */
	char *username;	/* optional element of type xsd:string */
	char *peer;	/* optional element of type xsd:string */
	char *rejectstr;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns5__PeerConnectRequestEvent
#define SOAP_TYPE_ns5__PeerConnectRequestEvent (56)
/* ns5:PeerConnectRequestEvent */
struct ns5__PeerConnectRequestEvent
{
	int *cndir;	/* optional element of type xsd:int */
	int *cntry;	/* optional element of type xsd:int */
	LONG64 *connection;	/* optional element of type xsd:long */
	LONG64 *id;	/* optional element of type xsd:long */
	time_t *timestamp;	/* optional element of type xsd:dateTime */
	int *type;	/* optional element of type xsd:int */
	char *username;	/* optional element of type xsd:string */
	char *appData;	/* optional element of type xsd:string */
	int *cntype;	/* optional element of type xsd:int */
	char *peer;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns5__PeerConnectedEvent
#define SOAP_TYPE_ns5__PeerConnectedEvent (57)
/* ns5:PeerConnectedEvent */
struct ns5__PeerConnectedEvent
{
	int *cndir;	/* optional element of type xsd:int */
	int *cntry;	/* optional element of type xsd:int */
	LONG64 *connection;	/* optional element of type xsd:long */
	LONG64 *id;	/* optional element of type xsd:long */
	time_t *timestamp;	/* optional element of type xsd:dateTime */
	int *type;	/* optional element of type xsd:int */
	char *username;	/* optional element of type xsd:string */
	char *peer;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns5__PeerDisconnectedEvent
#define SOAP_TYPE_ns5__PeerDisconnectedEvent (58)
/* ns5:PeerDisconnectedEvent */
struct ns5__PeerDisconnectedEvent
{
	int *cndir;	/* optional element of type xsd:int */
	int *cntry;	/* optional element of type xsd:int */
	LONG64 *connection;	/* optional element of type xsd:long */
	LONG64 *id;	/* optional element of type xsd:long */
	time_t *timestamp;	/* optional element of type xsd:dateTime */
	int *type;	/* optional element of type xsd:int */
	char *username;	/* optional element of type xsd:string */
	char *peer;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns5__PeerSynPktEvent
#define SOAP_TYPE_ns5__PeerSynPktEvent (59)
/* ns5:PeerSynPktEvent */
struct ns5__PeerSynPktEvent
{
	int *cndir;	/* optional element of type xsd:int */
	int *cntry;	/* optional element of type xsd:int */
	LONG64 *connection;	/* optional element of type xsd:long */
	LONG64 *id;	/* optional element of type xsd:long */
	time_t *timestamp;	/* optional element of type xsd:dateTime */
	int *type;	/* optional element of type xsd:int */
	char *username;	/* optional element of type xsd:string */
	struct xsd__base64Binary *packet;	/* optional element of type xsd:base64Binary */
	char *peer;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns4__AddNetworkMemberNotification
#define SOAP_TYPE_ns4__AddNetworkMemberNotification (61)
/* ns4:AddNetworkMemberNotification */
struct ns4__AddNetworkMemberNotification
{
	char *member;	/* optional element of type xsd:string */
	LONG64 *network;	/* optional element of type xsd:long */
	LONG64 *id;	/* optional element of type xsd:long */
	int *type;	/* optional element of type xsd:int */
	char *username;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns4__DeclineNetworkInviteNotification
#define SOAP_TYPE_ns4__DeclineNetworkInviteNotification (62)
/* ns4:DeclineNetworkInviteNotification */
struct ns4__DeclineNetworkInviteNotification
{
	char *member;	/* optional element of type xsd:string */
	LONG64 *network;	/* optional element of type xsd:long */
	LONG64 *id;	/* optional element of type xsd:long */
	int *type;	/* optional element of type xsd:int */
	char *username;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns4__DeleteNetworkMemberNotification
#define SOAP_TYPE_ns4__DeleteNetworkMemberNotification (63)
/* ns4:DeleteNetworkMemberNotification */
struct ns4__DeleteNetworkMemberNotification
{
	char *member;	/* optional element of type xsd:string */
	LONG64 *network;	/* optional element of type xsd:long */
	LONG64 *id;	/* optional element of type xsd:long */
	int *type;	/* optional element of type xsd:int */
	char *username;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns4__SignupNetworkMemberNotification
#define SOAP_TYPE_ns4__SignupNetworkMemberNotification (64)
/* ns4:SignupNetworkMemberNotification */
struct ns4__SignupNetworkMemberNotification
{
	char *member;	/* optional element of type xsd:string */
	LONG64 *network;	/* optional element of type xsd:long */
	LONG64 *id;	/* optional element of type xsd:long */
	int *type;	/* optional element of type xsd:int */
	char *username;	/* optional element of type xsd:string */
	char *prevmember;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns4__UpdateMemberContactNotification
#define SOAP_TYPE_ns4__UpdateMemberContactNotification (65)
/* ns4:UpdateMemberContactNotification */
struct ns4__UpdateMemberContactNotification
{
	char *member;	/* optional element of type xsd:string */
	LONG64 *network;	/* optional element of type xsd:long */
	LONG64 *id;	/* optional element of type xsd:long */
	int *type;	/* optional element of type xsd:int */
	char *username;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__vrfyLoginResponse
#define SOAP_TYPE_ns1__vrfyLoginResponse (66)
/* ns1:vrfyLoginResponse */
struct ns1__vrfyLoginResponse
{
#ifdef WITH_NOEMPTYSTRUCT
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#ifndef SOAP_TYPE_ns1__vrfyLogin
#define SOAP_TYPE_ns1__vrfyLogin (69)
/* ns1:vrfyLogin */
struct ns1__vrfyLogin
{
#ifdef WITH_NOEMPTYSTRUCT
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#ifndef SOAP_TYPE_ns1__deleteUserResponse
#define SOAP_TYPE_ns1__deleteUserResponse (70)
/* ns1:deleteUserResponse */
struct ns1__deleteUserResponse
{
#ifdef WITH_NOEMPTYSTRUCT
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#ifndef SOAP_TYPE_ns1__deleteUser
#define SOAP_TYPE_ns1__deleteUser (73)
/* ns1:deleteUser */
struct ns1__deleteUser
{
	char *_in0;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__changePasswordResponse
#define SOAP_TYPE_ns1__changePasswordResponse (74)
/* ns1:changePasswordResponse */
struct ns1__changePasswordResponse
{
#ifdef WITH_NOEMPTYSTRUCT
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#ifndef SOAP_TYPE_ns1__changePassword
#define SOAP_TYPE_ns1__changePassword (77)
/* ns1:changePassword */
struct ns1__changePassword
{
	char *_in0;	/* optional element of type xsd:string */
	char *_in1;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__updateContactResponse
#define SOAP_TYPE_ns1__updateContactResponse (78)
/* ns1:updateContactResponse */
struct ns1__updateContactResponse
{
#ifdef WITH_NOEMPTYSTRUCT
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#ifndef SOAP_TYPE_ns1__updateContact
#define SOAP_TYPE_ns1__updateContact (82)
/* ns1:updateContact */
struct ns1__updateContact
{
	struct ns2__Contact *_in0;	/* optional element of type ns2:Contact */
};
#endif

#ifndef SOAP_TYPE_ns1__getContactResponse
#define SOAP_TYPE_ns1__getContactResponse (83)
/* ns1:getContactResponse */
struct ns1__getContactResponse
{
	struct ns2__Contact *_getContactReturn;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns2:Contact */
};
#endif

#ifndef SOAP_TYPE_ns1__getContact
#define SOAP_TYPE_ns1__getContact (86)
/* ns1:getContact */
struct ns1__getContact
{
	char *_in0;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__lookupContactsResponse
#define SOAP_TYPE_ns1__lookupContactsResponse (87)
/* ns1:lookupContactsResponse */
struct ns1__lookupContactsResponse
{
	struct ArrayOf_USCORExsd_USCOREanyType *_lookupContactsReturn;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ArrayOf_xsd_anyType */
};
#endif

#ifndef SOAP_TYPE_ns1__lookupContacts
#define SOAP_TYPE_ns1__lookupContacts (90)
/* ns1:lookupContacts */
struct ns1__lookupContacts
{
	struct ns2__Contact *_in0;	/* optional element of type ns2:Contact */
};
#endif

#ifndef SOAP_TYPE_ns1__addNetworkResponse
#define SOAP_TYPE_ns1__addNetworkResponse (91)
/* ns1:addNetworkResponse */
struct ns1__addNetworkResponse
{
	struct ns2__Network *_addNetworkReturn;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns2:Network */
};
#endif

#ifndef SOAP_TYPE_ns1__addNetwork
#define SOAP_TYPE_ns1__addNetwork (95)
/* ns1:addNetwork */
struct ns1__addNetwork
{
	char *_in0;	/* optional element of type xsd:string */
	char *_in1;	/* optional element of type xsd:string */
	struct ArrayOf_USCORExsd_USCOREanyType *_in2;	/* optional element of type ArrayOf_xsd_anyType */
};
#endif

#ifndef SOAP_TYPE_ns1__deleteNetworkResponse
#define SOAP_TYPE_ns1__deleteNetworkResponse (96)
/* ns1:deleteNetworkResponse */
struct ns1__deleteNetworkResponse
{
#ifdef WITH_NOEMPTYSTRUCT
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#ifndef SOAP_TYPE_ns1__deleteNetwork
#define SOAP_TYPE_ns1__deleteNetwork (99)
/* ns1:deleteNetwork */
struct ns1__deleteNetwork
{
	LONG64 _in0;	/* required element of type xsd:long */
};
#endif

#ifndef SOAP_TYPE_ns1__inviteNetworkMemberResponse
#define SOAP_TYPE_ns1__inviteNetworkMemberResponse (100)
/* ns1:inviteNetworkMemberResponse */
struct ns1__inviteNetworkMemberResponse
{
	struct ns2__Member *_inviteNetworkMemberReturn;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns2:Member */
};
#endif

#ifndef SOAP_TYPE_ns1__inviteNetworkMember
#define SOAP_TYPE_ns1__inviteNetworkMember (104)
/* ns1:inviteNetworkMember */
struct ns1__inviteNetworkMember
{
	LONG64 _in0;	/* required element of type xsd:long */
	char *_in1;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__inviteNetworkMemberByEmailResponse
#define SOAP_TYPE_ns1__inviteNetworkMemberByEmailResponse (105)
/* ns1:inviteNetworkMemberByEmailResponse */
struct ns1__inviteNetworkMemberByEmailResponse
{
	struct ns2__Member *_inviteNetworkMemberByEmailReturn;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns2:Member */
};
#endif

#ifndef SOAP_TYPE_ns1__inviteNetworkMemberByEmail
#define SOAP_TYPE_ns1__inviteNetworkMemberByEmail (108)
/* ns1:inviteNetworkMemberByEmail */
struct ns1__inviteNetworkMemberByEmail
{
	LONG64 _in0;	/* required element of type xsd:long */
	char *_in1;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__inviteNetworkMemberByUserResponse
#define SOAP_TYPE_ns1__inviteNetworkMemberByUserResponse (109)
/* ns1:inviteNetworkMemberByUserResponse */
struct ns1__inviteNetworkMemberByUserResponse
{
	struct ns2__Member *_inviteNetworkMemberByUserReturn;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns2:Member */
};
#endif

#ifndef SOAP_TYPE_ns1__inviteNetworkMemberByUser
#define SOAP_TYPE_ns1__inviteNetworkMemberByUser (113)
/* ns1:inviteNetworkMemberByUser */
struct ns1__inviteNetworkMemberByUser
{
	LONG64 _in0;	/* required element of type xsd:long */
	struct ns2__User *_in1;	/* optional element of type ns2:User */
	struct ns2__Contact *_in2;	/* optional element of type ns2:Contact */
};
#endif

#ifndef SOAP_TYPE_ns1__acceptNetworkInviteResponse
#define SOAP_TYPE_ns1__acceptNetworkInviteResponse (114)
/* ns1:acceptNetworkInviteResponse */
struct ns1__acceptNetworkInviteResponse
{
#ifdef WITH_NOEMPTYSTRUCT
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#ifndef SOAP_TYPE_ns1__acceptNetworkInvite
#define SOAP_TYPE_ns1__acceptNetworkInvite (117)
/* ns1:acceptNetworkInvite */
struct ns1__acceptNetworkInvite
{
	LONG64 _in0;	/* required element of type xsd:long */
	char *_in1;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__declineNetworkInviteResponse
#define SOAP_TYPE_ns1__declineNetworkInviteResponse (118)
/* ns1:declineNetworkInviteResponse */
struct ns1__declineNetworkInviteResponse
{
#ifdef WITH_NOEMPTYSTRUCT
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#ifndef SOAP_TYPE_ns1__declineNetworkInvite
#define SOAP_TYPE_ns1__declineNetworkInvite (121)
/* ns1:declineNetworkInvite */
struct ns1__declineNetworkInvite
{
	LONG64 _in0;	/* required element of type xsd:long */
	char *_in1;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__deleteNetworkMemberResponse
#define SOAP_TYPE_ns1__deleteNetworkMemberResponse (122)
/* ns1:deleteNetworkMemberResponse */
struct ns1__deleteNetworkMemberResponse
{
#ifdef WITH_NOEMPTYSTRUCT
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#ifndef SOAP_TYPE_ns1__deleteNetworkMember
#define SOAP_TYPE_ns1__deleteNetworkMember (125)
/* ns1:deleteNetworkMember */
struct ns1__deleteNetworkMember
{
	LONG64 _in0;	/* required element of type xsd:long */
	char *_in1;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__leaveNetworkResponse
#define SOAP_TYPE_ns1__leaveNetworkResponse (126)
/* ns1:leaveNetworkResponse */
struct ns1__leaveNetworkResponse
{
#ifdef WITH_NOEMPTYSTRUCT
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#ifndef SOAP_TYPE_ns1__leaveNetwork
#define SOAP_TYPE_ns1__leaveNetwork (129)
/* ns1:leaveNetwork */
struct ns1__leaveNetwork
{
	LONG64 _in0;	/* required element of type xsd:long */
	char *_in1;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__getNetworksResponse
#define SOAP_TYPE_ns1__getNetworksResponse (130)
/* ns1:getNetworksResponse */
struct ns1__getNetworksResponse
{
	struct ArrayOf_USCORExsd_USCOREanyType *_getNetworksReturn;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ArrayOf_xsd_anyType */
};
#endif

#ifndef SOAP_TYPE_ns1__getNetworks
#define SOAP_TYPE_ns1__getNetworks (133)
/* ns1:getNetworks */
struct ns1__getNetworks
{
	char *_in0;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__getNetworkResponse
#define SOAP_TYPE_ns1__getNetworkResponse (134)
/* ns1:getNetworkResponse */
struct ns1__getNetworkResponse
{
	struct ns2__Network *_getNetworkReturn;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns2:Network */
};
#endif

#ifndef SOAP_TYPE_ns1__getNetwork
#define SOAP_TYPE_ns1__getNetwork (137)
/* ns1:getNetwork */
struct ns1__getNetwork
{
	LONG64 _in0;	/* required element of type xsd:long */
};
#endif

#ifndef SOAP_TYPE_ns1__getNotificationsResponse
#define SOAP_TYPE_ns1__getNotificationsResponse (138)
/* ns1:getNotificationsResponse */
struct ns1__getNotificationsResponse
{
	struct ArrayOf_USCORExsd_USCOREanyType *_getNotificationsReturn;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ArrayOf_xsd_anyType */
};
#endif

#ifndef SOAP_TYPE_ns1__getNotifications
#define SOAP_TYPE_ns1__getNotifications (141)
/* ns1:getNotifications */
struct ns1__getNotifications
{
	char *_in0;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__getSystemNotificationsResponse
#define SOAP_TYPE_ns1__getSystemNotificationsResponse (142)
/* ns1:getSystemNotificationsResponse */
struct ns1__getSystemNotificationsResponse
{
	struct ArrayOf_USCORExsd_USCOREanyType *getSystemNotificationsReturn;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ArrayOf_xsd_anyType */
};
#endif

#ifndef SOAP_TYPE_ns1__getSystemNotifications
#define SOAP_TYPE_ns1__getSystemNotifications (145)
/* ns1:getSystemNotifications */
struct ns1__getSystemNotifications
{
#ifdef WITH_NOEMPTYSTRUCT
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (146)
/* SOAP Header: */
struct SOAP_ENV__Header
{
#ifdef WITH_NOEMPTYSTRUCT
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (147)
/* SOAP Fault Code: */
struct SOAP_ENV__Code
{
	char *SOAP_ENV__Value;	/* optional element of type xsd:QName */
	struct SOAP_ENV__Code *SOAP_ENV__Subcode;	/* optional element of type SOAP-ENV:Code */
};
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (149)
/* SOAP-ENV:Detail */
struct SOAP_ENV__Detail
{
	int __type;	/* any type of element <fault> (defined below) */
	void *fault;	/* transient */
	char *__any;
};
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (152)
/* SOAP-ENV:Reason */
struct SOAP_ENV__Reason
{
	char *SOAP_ENV__Text;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (153)
/* SOAP Fault: */
struct SOAP_ENV__Fault
{
	char *faultcode;	/* optional element of type xsd:QName */
	char *faultstring;	/* optional element of type xsd:string */
	char *faultactor;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *detail;	/* optional element of type SOAP-ENV:Detail */
	struct SOAP_ENV__Code *SOAP_ENV__Code;	/* optional element of type SOAP-ENV:Code */
	struct SOAP_ENV__Reason *SOAP_ENV__Reason;	/* optional element of type SOAP-ENV:Reason */
	char *SOAP_ENV__Node;	/* optional element of type xsd:string */
	char *SOAP_ENV__Role;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *SOAP_ENV__Detail;	/* optional element of type SOAP-ENV:Detail */
};
#endif

/******************************************************************************\
 *                                                                            *
 * Types with Custom Serializers                                              *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Typedefs                                                                   *
 *                                                                            *
\******************************************************************************/

#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
typedef char *_QName;
#endif

#ifndef SOAP_TYPE__XML
#define SOAP_TYPE__XML (6)
typedef char *_XML;
#endif


/******************************************************************************\
 *                                                                            *
 * Typedef Synonyms                                                           *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Externals                                                                  *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Stubs                                                                      *
 *                                                                            *
\******************************************************************************/


SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__vrfyLogin(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct ns1__vrfyLoginResponse *_param_1);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__deleteUser(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_in0, struct ns1__deleteUserResponse *_param_2);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__changePassword(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_in0, char *_in1, struct ns1__changePasswordResponse *_param_3);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__updateContact(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct ns2__Contact *_in0, struct ns1__updateContactResponse *_param_4);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__getContact(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_in0, struct ns1__getContactResponse *_param_5);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__lookupContacts(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct ns2__Contact *_in0, struct ns1__lookupContactsResponse *_param_6);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__addNetwork(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_in0, char *_in1, struct ArrayOf_USCORExsd_USCOREanyType *_in2, struct ns1__addNetworkResponse *_param_7);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__deleteNetwork(struct soap *soap, const char *soap_endpoint, const char *soap_action, LONG64 _in0, struct ns1__deleteNetworkResponse *_param_8);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__inviteNetworkMember(struct soap *soap, const char *soap_endpoint, const char *soap_action, LONG64 _in0, char *_in1, struct ns1__inviteNetworkMemberResponse *_param_9);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__inviteNetworkMemberByEmail(struct soap *soap, const char *soap_endpoint, const char *soap_action, LONG64 _in0, char *_in1, struct ns1__inviteNetworkMemberByEmailResponse *_param_10);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__inviteNetworkMemberByUser(struct soap *soap, const char *soap_endpoint, const char *soap_action, LONG64 _in0, struct ns2__User *_in1, struct ns2__Contact *_in2, struct ns1__inviteNetworkMemberByUserResponse *_param_11);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__acceptNetworkInvite(struct soap *soap, const char *soap_endpoint, const char *soap_action, LONG64 _in0, char *_in1, struct ns1__acceptNetworkInviteResponse *_param_12);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__declineNetworkInvite(struct soap *soap, const char *soap_endpoint, const char *soap_action, LONG64 _in0, char *_in1, struct ns1__declineNetworkInviteResponse *_param_13);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__deleteNetworkMember(struct soap *soap, const char *soap_endpoint, const char *soap_action, LONG64 _in0, char *_in1, struct ns1__deleteNetworkMemberResponse *_param_14);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__leaveNetwork(struct soap *soap, const char *soap_endpoint, const char *soap_action, LONG64 _in0, char *_in1, struct ns1__leaveNetworkResponse *_param_15);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__getNetworks(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_in0, struct ns1__getNetworksResponse *_param_16);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__getNetwork(struct soap *soap, const char *soap_endpoint, const char *soap_action, LONG64 _in0, struct ns1__getNetworkResponse *_param_17);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__getNotifications(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_in0, struct ns1__getNotificationsResponse *_param_18);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__getSystemNotifications(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct ns1__getSystemNotificationsResponse *_param_19);

#ifdef __cplusplus
}
#endif

#endif

/* End of soapStub.h */
