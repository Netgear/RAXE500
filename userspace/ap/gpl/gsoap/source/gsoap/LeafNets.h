/* LeafNets.h
   Generated by wsdl2h 1.2.11 from LeafNetsWebService.wsdl and typemap.dat
   2008-09-23 03:08:00 GMT
   Copyright (C) 2001-2008 Robert van Engelen, Genivia Inc. All Rights Reserved.
   This part of the software is released under one of the following licenses:
   GPL or Genivia's license for commercial use.
*/

/* NOTE:

 - Compile this file with soapcpp2 to complete the code generation process.
 - Use soapcpp2 option -I to specify paths for #import
   To build with STL, 'stlvector.h' is imported from 'import' dir in package.
 - Use wsdl2h options -c and -s to generate pure C code or C++ code without STL.
 - Use 'typemap.dat' to control namespace bindings and type mappings.
   It is strongly recommended to customize the names of the namespace prefixes
   generated by wsdl2h. To do so, modify the prefix bindings in the Namespaces
   section below and add the modified lines to 'typemap.dat' to rerun wsdl2h.
 - Use Doxygen (www.doxygen.org) to browse this file.
 - Use wsdl2h option -l to view the software license terms.

   DO NOT include this file directly into your project.
   Include only the soapcpp2-generated headers and source code files.
*/

//gsoapopt cw

/******************************************************************************\
 *                                                                            *
 * http://peerserver.leafnetworks.net:8080/axis/services/LeafNetsWebService   *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Import                                                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Namespaces                                                          *
 *                                                                            *
\******************************************************************************/


/* NOTE:

It is strongly recommended to customize the names of the namespace prefixes
generated by wsdl2h. To do so, modify the prefix bindings below and add the
modified lines to typemap.dat to rerun wsdl2h:

ns1 = "http://peerserver.leafnetworks.net:8080/axis/services/LeafNetsWebService"
ns2 = "urn:com.leafnets.ds"
ns3 = "http://xml.apache.org/xml-soap"
ns4 = "urn:com.leafnets.ds.notification"
ns5 = "urn:com.leafnets.ds.peer"

*/

//gsoap ns2   schema namespace:	urn:com.leafnets.ds
//gsoap ns1   schema namespace:	http://peerserver.leafnetworks.net:8080/axis/services/LeafNetsWebService
//gsoap ns3   schema namespace:	http://xml.apache.org/xml-soap
//gsoap ns4   schema namespace:	urn:com.leafnets.ds.notification
//gsoap ns5   schema namespace:	urn:com.leafnets.ds.peer
//gsoap ns2   schema form:	unqualified
//gsoap ns1   schema form:	unqualified
//gsoap ns3   schema form:	unqualified
//gsoap ns4   schema form:	unqualified
//gsoap ns5   schema form:	unqualified

/******************************************************************************\
 *                                                                            *
 * Schema Types                                                               *
 *                                                                            *
\******************************************************************************/


/// Built-in type "xs:base64Binary".
struct xsd__base64Binary
{	unsigned char *__ptr;
	int __size;
	char *id, *type, *options; // NOTE: for DIME and MTOM XOP attachments only
};


/// "urn:com.leafnets.ds":Contact is a complexType.
struct ns2__Contact
{
/// Element email of type xs:string.
    char*                                email                         ;	///< Nullable pointer.
/// Element fname of type xs:string.
    char*                                fname                         ;	///< Nullable pointer.
/// Element lname of type xs:string.
    char*                                lname                         ;	///< Nullable pointer.
/// Element userStatus of type xs:int.
    int*                                 userStatus                    ;	///< Nullable pointer.
/// Element username of type xs:string.
    char*                                username                      ;	///< Nullable pointer.
};

/// "urn:com.leafnets.ds":Network is a complexType.
struct ns2__Network
{
/// Element id of type xs:long.
    LONG64*                              id                            ;	///< Nullable pointer.
/// Element members of type "http://peerserver.leafnetworks.net:8080/axis/services/LeafNetsWebService":ArrayOf_xsd_anyType.
    struct ArrayOf_USCORExsd_USCOREanyType*  members                       ;	///< Nullable pointer.
/// Element name of type xs:string.
    char*                                name                          ;	///< Nullable pointer.
/// Element owner of type xs:string.
    char*                                owner                         ;	///< Nullable pointer.
};

/// "urn:com.leafnets.ds":Member is a complexType.
struct ns2__Member
{
/// Element status of type xs:int.
    int*                                 status                        ;	///< Nullable pointer.
/// Element username of type xs:string.
    char*                                username                      ;	///< Nullable pointer.
};

/// "urn:com.leafnets.ds":User is a complexType.
struct ns2__User
{
/// Element password of type xs:string.
    char*                                password                      ;	///< Nullable pointer.
/// Element status of type xs:int.
    int*                                 status                        ;	///< Nullable pointer.
/// Element username of type xs:string.
    char*                                username                      ;	///< Nullable pointer.
};

/// "urn:com.leafnets.ds":IPAddress is a complexType.
struct ns2__IPAddress
{
/// Element ip of type xs:string.
    char*                                ip                            ;	///< Nullable pointer.
/// Element username of type xs:string.
    char*                                username                      ;	///< Nullable pointer.
};

/// "urn:com.leafnets.ds":IPAttr is a complexType.
struct ns2__IPAttr
{
/// Element lvalue of type xs:long.
    LONG64*                              lvalue                        ;	///< Nullable pointer.
/// Element name of type xs:string.
    char*                                name                          ;	///< Nullable pointer.
/// Element value of type xs:string.
    char*                                value                         ;	///< Nullable pointer.
};

/// "urn:com.leafnets.ds":SystemNotification is a complexType.
struct ns2__SystemNotification
{
/// Element active of type xs:int.
    int*                                 active                        ;	///< Nullable pointer.
/// Element description of type xs:string.
    char*                                description                   ;	///< Nullable pointer.
/// Element enddate of type xs:dateTime.
    time_t*                              enddate                       ;	///< Nullable pointer.
/// Element id of type xs:long.
    LONG64*                              id                            ;	///< Nullable pointer.
/// Element reminder of type xs:string.
    char*                                reminder                      ;	///< Nullable pointer.
/// Element startdate of type xs:dateTime.
    time_t*                              startdate                     ;	///< Nullable pointer.
};

/// "urn:com.leafnets.ds":UserAttr is a complexType.
struct ns2__UserAttr
{
/// Element lvalue of type xs:long.
    LONG64*                              lvalue                        ;	///< Nullable pointer.
/// Element name of type xs:string.
    char*                                name                          ;	///< Nullable pointer.
/// Element value of type xs:string.
    char*                                value                         ;	///< Nullable pointer.
};

/// "urn:com.leafnets.ds":UserStats is a complexType.
struct ns2__UserStats
{
/// Element numActive of type xs:long.
    LONG64*                              numActive                     ;	///< Nullable pointer.
/// Element numSignup of type xs:long.
    LONG64*                              numSignup                     ;	///< Nullable pointer.
/// Element numTotal of type xs:long.
    LONG64*                              numTotal                      ;	///< Nullable pointer.
};

/// "http://xml.apache.org/xml-soap":Vector is a complexType.
struct ns3__Vector
{
/// Size of array of _XML* is 0..unbounded
    int                                  __sizeitem                    ;
/// Array of length 0..unbounded
    _XML*                                item                           0;
};

/// "urn:com.leafnets.ds.notification":Notification is an abstract complexType.
struct ns4__Notification
{
/// Element id of type xs:long.
    LONG64*                              id                            ;	///< Nullable pointer.
/// Element type of type xs:int.
    int*                                 type                          ;	///< Nullable pointer.
/// Element username of type xs:string.
    char*                                username                      ;	///< Nullable pointer.
};

/// "urn:com.leafnets.ds.notification":NotificationType is an abstract complexType.
struct ns4__NotificationType
{
};

/// "urn:com.leafnets.ds.peer":PeerAccess is a complexType.
struct ns5__PeerAccess
{
/// Element access of type xs:dateTime.
    time_t*                              access                        ;	///< Nullable pointer.
/// Element updatenum of type xs:long.
    LONG64*                              updatenum                     ;	///< Nullable pointer.
/// Element username of type xs:string.
    char*                                username                      ;	///< Nullable pointer.
};

/// "urn:com.leafnets.ds.peer":PeerAssist is a complexType.
struct ns5__PeerAssist
{
/// Element addr of type xs:string.
    char*                                addr                          ;	///< Nullable pointer.
/// Element id of type xs:long.
    LONG64*                              id                            ;	///< Nullable pointer.
/// Element name of type xs:string.
    char*                                name                          ;	///< Nullable pointer.
/// Element port of type xs:int.
    int*                                 port                          ;	///< Nullable pointer.
/// Element state of type xs:int.
    int*                                 state                         ;	///< Nullable pointer.
};

/// "urn:com.leafnets.ds.peer":PeerAssistAttr is a complexType.
struct ns5__PeerAssistAttr
{
/// Element name of type xs:string.
    char*                                name                          ;	///< Nullable pointer.
/// Element timestamp of type xs:dateTime.
    time_t*                              timestamp                     ;	///< Nullable pointer.
/// Element value of type xs:string.
    char*                                value                         ;	///< Nullable pointer.
};

/// "urn:com.leafnets.ds.peer":PeerEvent is an abstract complexType.
struct ns5__PeerEvent
{
/// Element id of type xs:long.
    LONG64*                              id                            ;	///< Nullable pointer.
/// Element timestamp of type xs:dateTime.
    time_t*                              timestamp                     ;	///< Nullable pointer.
/// Element type of type xs:int.
    int*                                 type                          ;	///< Nullable pointer.
/// Element username of type xs:string.
    char*                                username                      ;	///< Nullable pointer.
};

/// "urn:com.leafnets.ds.peer":PeerConnection is a complexType.
struct ns5__PeerConnection
{
/// Element assistId of type xs:long.
    LONG64*                              assistId                      ;	///< Nullable pointer.
/// Element cndir of type xs:int.
    int*                                 cndir                         ;	///< Nullable pointer.
/// Element cntry of type xs:int.
    int*                                 cntry                         ;	///< Nullable pointer.
/// Element cntype of type xs:int.
    int*                                 cntype                        ;	///< Nullable pointer.
/// Element connectStatus of type xs:int.
    int*                                 connectStatus                 ;	///< Nullable pointer.
/// Element id of type xs:long.
    LONG64*                              id                            ;	///< Nullable pointer.
/// Element info of type "http://peerserver.leafnetworks.net:8080/axis/services/LeafNetsWebService":ArrayOf_xsd_anyType.
    struct ArrayOf_USCORExsd_USCOREanyType*  info                          ;	///< Nullable pointer.
/// Element initiator of type xs:string.
    char*                                initiator                     ;	///< Nullable pointer.
/// Element state of type xs:int.
    int*                                 state                         ;	///< Nullable pointer.
/// Element timestamp of type xs:dateTime.
    time_t*                              timestamp                     ;	///< Nullable pointer.
};

/// "urn:com.leafnets.ds.peer":PeerConnectionConnectStatus is a complexType.
struct ns5__PeerConnectionConnectStatus
{
};

/// "urn:com.leafnets.ds.peer":PeerConnectionConnectedStatus is a complexType.
struct ns5__PeerConnectionConnectedStatus
{
};

/// "urn:com.leafnets.ds.peer":PeerConnectionInfo is a complexType.
struct ns5__PeerConnectionInfo
{
/// Element connectedStatus of type xs:int.
    int*                                 connectedStatus               ;	///< Nullable pointer.
/// Element inip of type xs:string.
    char*                                inip                          ;	///< Nullable pointer.
/// Element inport of type xs:int.
    int*                                 inport                        ;	///< Nullable pointer.
/// Element ip of type xs:string.
    char*                                ip                            ;	///< Nullable pointer.
/// Element port of type xs:int.
    int*                                 port                          ;	///< Nullable pointer.
/// Element username of type xs:string.
    char*                                username                      ;	///< Nullable pointer.
};

/// "urn:com.leafnets.ds.peer":PeerConnectionState is a complexType.
struct ns5__PeerConnectionState
{
};

/// "urn:com.leafnets.ds.peer":PeerConnectionStats is a complexType.
struct ns5__PeerConnectionStats
{
/// Element numFormed of type xs:long.
    LONG64*                              numFormed                     ;	///< Nullable pointer.
/// Element numOpened of type xs:long.
    LONG64*                              numOpened                     ;	///< Nullable pointer.
/// Element numTotal of type xs:long.
    LONG64*                              numTotal                      ;	///< Nullable pointer.
};

/// "urn:com.leafnets.ds.peer":PeerConnectionType is an abstract complexType.
struct ns5__PeerConnectionType
{
};

/// "urn:com.leafnets.ds.peer":PeerEventType is an abstract complexType.
struct ns5__PeerEventType
{
};

/// "urn:com.leafnets.ds.peer":PeerRegister is a complexType.
struct ns5__PeerRegister
{
/// Element timestamp of type xs:dateTime.
    time_t*                              timestamp                     ;	///< Nullable pointer.
/// Element updatenum of type xs:long.
    LONG64*                              updatenum                     ;	///< Nullable pointer.
/// Element username of type xs:string.
    char*                                username                      ;	///< Nullable pointer.
};

/// "urn:com.leafnets.ds":Usert is a complexType with complexContent extension of "urn:com.leafnets.ds":User.
struct ns2__Usert
{
/// INHERITED FROM ns2__User:
/// Element password of type xs:string.
    char*                                password                      ;	///< Nullable pointer.
/// Element status of type xs:int.
    int*                                 status                        ;	///< Nullable pointer.
/// Element username of type xs:string.
    char*                                username                      ;	///< Nullable pointer.
//  END OF INHERITED
/// Element timestamp of type xs:dateTime.
    time_t*                              timestamp                     ;	///< Nullable pointer.
};

/// "http://peerserver.leafnetworks.net:8080/axis/services/LeafNetsWebService":ArrayOf_xsd_anyType is a complexType with complexContent restriction of SOAP-ENC:Array.
/// SOAP encoded array of xs:anyType
struct ArrayOf_USCORExsd_USCOREanyType
{
/// Pointer to array of _XML.
    _XML                                *__ptr                         ;
/// Size of the dynamic array.
    int                                  __size                        ;
/// Offset for partially transmitted arrays (uncomment only when required).
//  int                                  __offset                      ;
};

/// "urn:com.leafnets.ds.notification":NetworkNotification is an abstract complexType with complexContent extension of "urn:com.leafnets.ds.notification":Notification.
struct ns4__NetworkNotification
{
/// INHERITED FROM ns4__Notification:
/// Element id of type xs:long.
    LONG64*                              id                            ;	///< Nullable pointer.
/// Element type of type xs:int.
    int*                                 type                          ;	///< Nullable pointer.
/// Element username of type xs:string.
    char*                                username                      ;	///< Nullable pointer.
//  END OF INHERITED
/// Element network of type xs:long.
    LONG64*                              network                       ;	///< Nullable pointer.
};

/// "urn:com.leafnets.ds.notification":NotificationIndex is a complexType with complexContent extension of "urn:com.leafnets.ds.notification":Notification.
struct ns4__NotificationIndex
{
/// INHERITED FROM ns4__Notification:
/// Element id of type xs:long.
    LONG64*                              id                            ;	///< Nullable pointer.
/// Element type of type xs:int.
    int*                                 type                          ;	///< Nullable pointer.
/// Element username of type xs:string.
    char*                                username                      ;	///< Nullable pointer.
//  END OF INHERITED
};

/// "urn:com.leafnets.ds.peer":PeerConnectionEvent is a complexType with complexContent extension of "urn:com.leafnets.ds.peer":PeerEvent.
struct ns5__PeerConnectionEvent
{
/// INHERITED FROM ns5__PeerEvent:
/// Element id of type xs:long.
    LONG64*                              id                            ;	///< Nullable pointer.
/// Element timestamp of type xs:dateTime.
    time_t*                              timestamp                     ;	///< Nullable pointer.
/// Element type of type xs:int.
    int*                                 type                          ;	///< Nullable pointer.
/// Element username of type xs:string.
    char*                                username                      ;	///< Nullable pointer.
//  END OF INHERITED
/// Element cndir of type xs:int.
    int*                                 cndir                         ;	///< Nullable pointer.
/// Element cntry of type xs:int.
    int*                                 cntry                         ;	///< Nullable pointer.
/// Element connection of type xs:long.
    LONG64*                              connection                    ;	///< Nullable pointer.
};

/// "urn:com.leafnets.ds.peer":PeerEventIndex is a complexType with complexContent extension of "urn:com.leafnets.ds.peer":PeerEvent.
struct ns5__PeerEventIndex
{
/// INHERITED FROM ns5__PeerEvent:
/// Element id of type xs:long.
    LONG64*                              id                            ;	///< Nullable pointer.
/// Element timestamp of type xs:dateTime.
    time_t*                              timestamp                     ;	///< Nullable pointer.
/// Element type of type xs:int.
    int*                                 type                          ;	///< Nullable pointer.
/// Element username of type xs:string.
    char*                                username                      ;	///< Nullable pointer.
//  END OF INHERITED
};

/// "urn:com.leafnets.ds.notification":NetworkMemberNotification is an abstract complexType with complexContent extension of "urn:com.leafnets.ds.notification":NetworkNotification.
struct ns4__NetworkMemberNotification
{
/// INHERITED FROM ns4__NetworkNotification:
/// Element network of type xs:long.
    LONG64*                              network                       ;	///< Nullable pointer.
//  END OF INHERITED
/// INHERITED FROM ns4__Notification:
/// Element id of type xs:long.
    LONG64*                              id                            ;	///< Nullable pointer.
/// Element type of type xs:int.
    int*                                 type                          ;	///< Nullable pointer.
/// Element username of type xs:string.
    char*                                username                      ;	///< Nullable pointer.
//  END OF INHERITED
/// Element member of type xs:string.
    char*                                member                        ;	///< Nullable pointer.
};

/// "urn:com.leafnets.ds.notification":DeleteNetworkNotification is a complexType with complexContent extension of "urn:com.leafnets.ds.notification":NetworkNotification.
struct ns4__DeleteNetworkNotification
{
/// INHERITED FROM ns4__NetworkNotification:
/// Element network of type xs:long.
    LONG64*                              network                       ;	///< Nullable pointer.
//  END OF INHERITED
/// INHERITED FROM ns4__Notification:
/// Element id of type xs:long.
    LONG64*                              id                            ;	///< Nullable pointer.
/// Element type of type xs:int.
    int*                                 type                          ;	///< Nullable pointer.
/// Element username of type xs:string.
    char*                                username                      ;	///< Nullable pointer.
//  END OF INHERITED
};

/// "urn:com.leafnets.ds.notification":InviteNetworkNotification is a complexType with complexContent extension of "urn:com.leafnets.ds.notification":NetworkNotification.
struct ns4__InviteNetworkNotification
{
/// INHERITED FROM ns4__NetworkNotification:
/// Element network of type xs:long.
    LONG64*                              network                       ;	///< Nullable pointer.
//  END OF INHERITED
/// INHERITED FROM ns4__Notification:
/// Element id of type xs:long.
    LONG64*                              id                            ;	///< Nullable pointer.
/// Element type of type xs:int.
    int*                                 type                          ;	///< Nullable pointer.
/// Element username of type xs:string.
    char*                                username                      ;	///< Nullable pointer.
//  END OF INHERITED
};

/// "urn:com.leafnets.ds.peer":PeerConnectBusyEvent is a complexType with complexContent extension of "urn:com.leafnets.ds.peer":PeerConnectionEvent.
struct ns5__PeerConnectBusyEvent
{
/// INHERITED FROM ns5__PeerConnectionEvent:
/// Element cndir of type xs:int.
    int*                                 cndir                         ;	///< Nullable pointer.
/// Element cntry of type xs:int.
    int*                                 cntry                         ;	///< Nullable pointer.
/// Element connection of type xs:long.
    LONG64*                              connection                    ;	///< Nullable pointer.
//  END OF INHERITED
/// INHERITED FROM ns5__PeerEvent:
/// Element id of type xs:long.
    LONG64*                              id                            ;	///< Nullable pointer.
/// Element timestamp of type xs:dateTime.
    time_t*                              timestamp                     ;	///< Nullable pointer.
/// Element type of type xs:int.
    int*                                 type                          ;	///< Nullable pointer.
/// Element username of type xs:string.
    char*                                username                      ;	///< Nullable pointer.
//  END OF INHERITED
/// Element peer of type xs:string.
    char*                                peer                          ;	///< Nullable pointer.
};

/// "urn:com.leafnets.ds.peer":PeerConnectErrorEvent is a complexType with complexContent extension of "urn:com.leafnets.ds.peer":PeerConnectionEvent.
struct ns5__PeerConnectErrorEvent
{
/// INHERITED FROM ns5__PeerConnectionEvent:
/// Element cndir of type xs:int.
    int*                                 cndir                         ;	///< Nullable pointer.
/// Element cntry of type xs:int.
    int*                                 cntry                         ;	///< Nullable pointer.
/// Element connection of type xs:long.
    LONG64*                              connection                    ;	///< Nullable pointer.
//  END OF INHERITED
/// INHERITED FROM ns5__PeerEvent:
/// Element id of type xs:long.
    LONG64*                              id                            ;	///< Nullable pointer.
/// Element timestamp of type xs:dateTime.
    time_t*                              timestamp                     ;	///< Nullable pointer.
/// Element type of type xs:int.
    int*                                 type                          ;	///< Nullable pointer.
/// Element username of type xs:string.
    char*                                username                      ;	///< Nullable pointer.
//  END OF INHERITED
/// Element errorstr of type xs:string.
    char*                                errorstr                      ;	///< Nullable pointer.
/// Element peer of type xs:string.
    char*                                peer                          ;	///< Nullable pointer.
};

/// "urn:com.leafnets.ds.peer":PeerConnectEvent is a complexType with complexContent extension of "urn:com.leafnets.ds.peer":PeerConnectionEvent.
struct ns5__PeerConnectEvent
{
/// INHERITED FROM ns5__PeerConnectionEvent:
/// Element cndir of type xs:int.
    int*                                 cndir                         ;	///< Nullable pointer.
/// Element cntry of type xs:int.
    int*                                 cntry                         ;	///< Nullable pointer.
/// Element connection of type xs:long.
    LONG64*                              connection                    ;	///< Nullable pointer.
//  END OF INHERITED
/// INHERITED FROM ns5__PeerEvent:
/// Element id of type xs:long.
    LONG64*                              id                            ;	///< Nullable pointer.
/// Element timestamp of type xs:dateTime.
    time_t*                              timestamp                     ;	///< Nullable pointer.
/// Element type of type xs:int.
    int*                                 type                          ;	///< Nullable pointer.
/// Element username of type xs:string.
    char*                                username                      ;	///< Nullable pointer.
//  END OF INHERITED
/// Element ip of type xs:string.
    char*                                ip                            ;	///< Nullable pointer.
/// Element peer of type xs:string.
    char*                                peer                          ;	///< Nullable pointer.
/// Element port of type xs:int.
    int*                                 port                          ;	///< Nullable pointer.
/// Element role of type xs:int.
    int*                                 role                          ;	///< Nullable pointer.
};

/// "urn:com.leafnets.ds.peer":PeerConnectRejectEvent is a complexType with complexContent extension of "urn:com.leafnets.ds.peer":PeerConnectionEvent.
struct ns5__PeerConnectRejectEvent
{
/// INHERITED FROM ns5__PeerConnectionEvent:
/// Element cndir of type xs:int.
    int*                                 cndir                         ;	///< Nullable pointer.
/// Element cntry of type xs:int.
    int*                                 cntry                         ;	///< Nullable pointer.
/// Element connection of type xs:long.
    LONG64*                              connection                    ;	///< Nullable pointer.
//  END OF INHERITED
/// INHERITED FROM ns5__PeerEvent:
/// Element id of type xs:long.
    LONG64*                              id                            ;	///< Nullable pointer.
/// Element timestamp of type xs:dateTime.
    time_t*                              timestamp                     ;	///< Nullable pointer.
/// Element type of type xs:int.
    int*                                 type                          ;	///< Nullable pointer.
/// Element username of type xs:string.
    char*                                username                      ;	///< Nullable pointer.
//  END OF INHERITED
/// Element peer of type xs:string.
    char*                                peer                          ;	///< Nullable pointer.
/// Element rejectstr of type xs:string.
    char*                                rejectstr                     ;	///< Nullable pointer.
};

/// "urn:com.leafnets.ds.peer":PeerConnectRequestEvent is a complexType with complexContent extension of "urn:com.leafnets.ds.peer":PeerConnectionEvent.
struct ns5__PeerConnectRequestEvent
{
/// INHERITED FROM ns5__PeerConnectionEvent:
/// Element cndir of type xs:int.
    int*                                 cndir                         ;	///< Nullable pointer.
/// Element cntry of type xs:int.
    int*                                 cntry                         ;	///< Nullable pointer.
/// Element connection of type xs:long.
    LONG64*                              connection                    ;	///< Nullable pointer.
//  END OF INHERITED
/// INHERITED FROM ns5__PeerEvent:
/// Element id of type xs:long.
    LONG64*                              id                            ;	///< Nullable pointer.
/// Element timestamp of type xs:dateTime.
    time_t*                              timestamp                     ;	///< Nullable pointer.
/// Element type of type xs:int.
    int*                                 type                          ;	///< Nullable pointer.
/// Element username of type xs:string.
    char*                                username                      ;	///< Nullable pointer.
//  END OF INHERITED
/// Element appData of type xs:string.
    char*                                appData                       ;	///< Nullable pointer.
/// Element cntype of type xs:int.
    int*                                 cntype                        ;	///< Nullable pointer.
/// Element peer of type xs:string.
    char*                                peer                          ;	///< Nullable pointer.
};

/// "urn:com.leafnets.ds.peer":PeerConnectedEvent is a complexType with complexContent extension of "urn:com.leafnets.ds.peer":PeerConnectionEvent.
struct ns5__PeerConnectedEvent
{
/// INHERITED FROM ns5__PeerConnectionEvent:
/// Element cndir of type xs:int.
    int*                                 cndir                         ;	///< Nullable pointer.
/// Element cntry of type xs:int.
    int*                                 cntry                         ;	///< Nullable pointer.
/// Element connection of type xs:long.
    LONG64*                              connection                    ;	///< Nullable pointer.
//  END OF INHERITED
/// INHERITED FROM ns5__PeerEvent:
/// Element id of type xs:long.
    LONG64*                              id                            ;	///< Nullable pointer.
/// Element timestamp of type xs:dateTime.
    time_t*                              timestamp                     ;	///< Nullable pointer.
/// Element type of type xs:int.
    int*                                 type                          ;	///< Nullable pointer.
/// Element username of type xs:string.
    char*                                username                      ;	///< Nullable pointer.
//  END OF INHERITED
/// Element peer of type xs:string.
    char*                                peer                          ;	///< Nullable pointer.
};

/// "urn:com.leafnets.ds.peer":PeerDisconnectedEvent is a complexType with complexContent extension of "urn:com.leafnets.ds.peer":PeerConnectionEvent.
struct ns5__PeerDisconnectedEvent
{
/// INHERITED FROM ns5__PeerConnectionEvent:
/// Element cndir of type xs:int.
    int*                                 cndir                         ;	///< Nullable pointer.
/// Element cntry of type xs:int.
    int*                                 cntry                         ;	///< Nullable pointer.
/// Element connection of type xs:long.
    LONG64*                              connection                    ;	///< Nullable pointer.
//  END OF INHERITED
/// INHERITED FROM ns5__PeerEvent:
/// Element id of type xs:long.
    LONG64*                              id                            ;	///< Nullable pointer.
/// Element timestamp of type xs:dateTime.
    time_t*                              timestamp                     ;	///< Nullable pointer.
/// Element type of type xs:int.
    int*                                 type                          ;	///< Nullable pointer.
/// Element username of type xs:string.
    char*                                username                      ;	///< Nullable pointer.
//  END OF INHERITED
/// Element peer of type xs:string.
    char*                                peer                          ;	///< Nullable pointer.
};

/// "urn:com.leafnets.ds.peer":PeerSynPktEvent is a complexType with complexContent extension of "urn:com.leafnets.ds.peer":PeerConnectionEvent.
struct ns5__PeerSynPktEvent
{
/// INHERITED FROM ns5__PeerConnectionEvent:
/// Element cndir of type xs:int.
    int*                                 cndir                         ;	///< Nullable pointer.
/// Element cntry of type xs:int.
    int*                                 cntry                         ;	///< Nullable pointer.
/// Element connection of type xs:long.
    LONG64*                              connection                    ;	///< Nullable pointer.
//  END OF INHERITED
/// INHERITED FROM ns5__PeerEvent:
/// Element id of type xs:long.
    LONG64*                              id                            ;	///< Nullable pointer.
/// Element timestamp of type xs:dateTime.
    time_t*                              timestamp                     ;	///< Nullable pointer.
/// Element type of type xs:int.
    int*                                 type                          ;	///< Nullable pointer.
/// Element username of type xs:string.
    char*                                username                      ;	///< Nullable pointer.
//  END OF INHERITED
/// Element packet of type xs:base64Binary.
    struct xsd__base64Binary*            packet                        ;	///< Nullable pointer.
/// Element peer of type xs:string.
    char*                                peer                          ;	///< Nullable pointer.
};

/// "urn:com.leafnets.ds.notification":AddNetworkMemberNotification is a complexType with complexContent extension of "urn:com.leafnets.ds.notification":NetworkMemberNotification.
struct ns4__AddNetworkMemberNotification
{
/// INHERITED FROM ns4__NetworkMemberNotification:
/// Element member of type xs:string.
    char*                                member                        ;	///< Nullable pointer.
//  END OF INHERITED
/// INHERITED FROM ns4__NetworkNotification:
/// Element network of type xs:long.
    LONG64*                              network                       ;	///< Nullable pointer.
//  END OF INHERITED
/// INHERITED FROM ns4__Notification:
/// Element id of type xs:long.
    LONG64*                              id                            ;	///< Nullable pointer.
/// Element type of type xs:int.
    int*                                 type                          ;	///< Nullable pointer.
/// Element username of type xs:string.
    char*                                username                      ;	///< Nullable pointer.
//  END OF INHERITED
};

/// "urn:com.leafnets.ds.notification":DeclineNetworkInviteNotification is a complexType with complexContent extension of "urn:com.leafnets.ds.notification":NetworkMemberNotification.
struct ns4__DeclineNetworkInviteNotification
{
/// INHERITED FROM ns4__NetworkMemberNotification:
/// Element member of type xs:string.
    char*                                member                        ;	///< Nullable pointer.
//  END OF INHERITED
/// INHERITED FROM ns4__NetworkNotification:
/// Element network of type xs:long.
    LONG64*                              network                       ;	///< Nullable pointer.
//  END OF INHERITED
/// INHERITED FROM ns4__Notification:
/// Element id of type xs:long.
    LONG64*                              id                            ;	///< Nullable pointer.
/// Element type of type xs:int.
    int*                                 type                          ;	///< Nullable pointer.
/// Element username of type xs:string.
    char*                                username                      ;	///< Nullable pointer.
//  END OF INHERITED
};

/// "urn:com.leafnets.ds.notification":DeleteNetworkMemberNotification is a complexType with complexContent extension of "urn:com.leafnets.ds.notification":NetworkMemberNotification.
struct ns4__DeleteNetworkMemberNotification
{
/// INHERITED FROM ns4__NetworkMemberNotification:
/// Element member of type xs:string.
    char*                                member                        ;	///< Nullable pointer.
//  END OF INHERITED
/// INHERITED FROM ns4__NetworkNotification:
/// Element network of type xs:long.
    LONG64*                              network                       ;	///< Nullable pointer.
//  END OF INHERITED
/// INHERITED FROM ns4__Notification:
/// Element id of type xs:long.
    LONG64*                              id                            ;	///< Nullable pointer.
/// Element type of type xs:int.
    int*                                 type                          ;	///< Nullable pointer.
/// Element username of type xs:string.
    char*                                username                      ;	///< Nullable pointer.
//  END OF INHERITED
};

/// "urn:com.leafnets.ds.notification":SignupNetworkMemberNotification is a complexType with complexContent extension of "urn:com.leafnets.ds.notification":NetworkMemberNotification.
struct ns4__SignupNetworkMemberNotification
{
/// INHERITED FROM ns4__NetworkMemberNotification:
/// Element member of type xs:string.
    char*                                member                        ;	///< Nullable pointer.
//  END OF INHERITED
/// INHERITED FROM ns4__NetworkNotification:
/// Element network of type xs:long.
    LONG64*                              network                       ;	///< Nullable pointer.
//  END OF INHERITED
/// INHERITED FROM ns4__Notification:
/// Element id of type xs:long.
    LONG64*                              id                            ;	///< Nullable pointer.
/// Element type of type xs:int.
    int*                                 type                          ;	///< Nullable pointer.
/// Element username of type xs:string.
    char*                                username                      ;	///< Nullable pointer.
//  END OF INHERITED
/// Element prevmember of type xs:string.
    char*                                prevmember                    ;	///< Nullable pointer.
};

/// "urn:com.leafnets.ds.notification":UpdateMemberContactNotification is a complexType with complexContent extension of "urn:com.leafnets.ds.notification":NetworkMemberNotification.
struct ns4__UpdateMemberContactNotification
{
/// INHERITED FROM ns4__NetworkMemberNotification:
/// Element member of type xs:string.
    char*                                member                        ;	///< Nullable pointer.
//  END OF INHERITED
/// INHERITED FROM ns4__NetworkNotification:
/// Element network of type xs:long.
    LONG64*                              network                       ;	///< Nullable pointer.
//  END OF INHERITED
/// INHERITED FROM ns4__Notification:
/// Element id of type xs:long.
    LONG64*                              id                            ;	///< Nullable pointer.
/// Element type of type xs:int.
    int*                                 type                          ;	///< Nullable pointer.
/// Element username of type xs:string.
    char*                                username                      ;	///< Nullable pointer.
//  END OF INHERITED
};

/******************************************************************************\
 *                                                                            *
 * Services                                                                   *
 *                                                                            *
\******************************************************************************/


//gsoap ns1  service name:	LeafNetsWebServiceSoapBinding 
//gsoap ns1  service type:	LeafNetsWebService 
//gsoap ns1  service port:	http://peerserver.leafnetworks.net:8080/axis/services/LeafNetsWebService 
//gsoap ns1  service namespace:	http://peerserver.leafnetworks.net:8080/axis/services/LeafNetsWebService 
//gsoap ns1  service transport:	http://schemas.xmlsoap.org/soap/http 

/** @mainpage Service Definitions

@section Service_bindings Bindings
  - @ref LeafNetsWebServiceSoapBinding

*/

/**

@page LeafNetsWebServiceSoapBinding Binding "LeafNetsWebServiceSoapBinding"

@section LeafNetsWebServiceSoapBinding_operations Operations of Binding  "LeafNetsWebServiceSoapBinding"
  - @ref ns1__vrfyLogin
  - @ref ns1__deleteUser
  - @ref ns1__changePassword
  - @ref ns1__updateContact
  - @ref ns1__getContact
  - @ref ns1__lookupContacts
  - @ref ns1__addNetwork
  - @ref ns1__deleteNetwork
  - @ref ns1__inviteNetworkMember
  - @ref ns1__inviteNetworkMemberByEmail
  - @ref ns1__inviteNetworkMemberByUser
  - @ref ns1__acceptNetworkInvite
  - @ref ns1__declineNetworkInvite
  - @ref ns1__deleteNetworkMember
  - @ref ns1__leaveNetwork
  - @ref ns1__getNetworks
  - @ref ns1__getNetwork
  - @ref ns1__getNotifications
  - @ref ns1__getSystemNotifications

@section LeafNetsWebServiceSoapBinding_ports Endpoints of Binding  "LeafNetsWebServiceSoapBinding"
  - http://peerserver.leafnetworks.net:8080/axis/services/LeafNetsWebService

Note: use wsdl2h option -N to change the service binding prefix name

*/

/******************************************************************************\
 *                                                                            *
 * LeafNetsWebServiceSoapBinding                                              *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * ns1__vrfyLogin                                                             *
 *                                                                            *
\******************************************************************************/

/// Operation response struct "ns1__vrfyLoginResponse" of service binding "LeafNetsWebServiceSoapBinding" operation "ns1__vrfyLogin"
struct ns1__vrfyLoginResponse
{
};

/// Operation "ns1__vrfyLogin" of service binding "LeafNetsWebServiceSoapBinding"

/**

Operation details:

  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__vrfyLogin(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    // response parameters:
    struct ns1__vrfyLoginResponse*
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__vrfyLogin(
    struct soap *soap,
    // request parameters:
    // response parameters:
    struct ns1__vrfyLoginResponse*
  );
@endcode

*/

//gsoap ns1  service method-style:	vrfyLogin rpc
//gsoap ns1  service method-encoding:	vrfyLogin http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	vrfyLogin ""
int ns1__vrfyLogin(
    struct ns1__vrfyLoginResponse      *	///< Response struct parameter
);

/******************************************************************************\
 *                                                                            *
 * ns1__deleteUser                                                            *
 *                                                                            *
\******************************************************************************/

/// Operation response struct "ns1__deleteUserResponse" of service binding "LeafNetsWebServiceSoapBinding" operation "ns1__deleteUser"
struct ns1__deleteUserResponse
{
};

/// Operation "ns1__deleteUser" of service binding "LeafNetsWebServiceSoapBinding"

/**

Operation details:

  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__deleteUser(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    char*                               in0,
    // response parameters:
    struct ns1__deleteUserResponse*
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__deleteUser(
    struct soap *soap,
    // request parameters:
    char*                               in0,
    // response parameters:
    struct ns1__deleteUserResponse*
  );
@endcode

*/

//gsoap ns1  service method-style:	deleteUser rpc
//gsoap ns1  service method-encoding:	deleteUser http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	deleteUser ""
int ns1__deleteUser(
    char*                               _in0,	///< Request parameter
    struct ns1__deleteUserResponse     *	///< Response struct parameter
);

/******************************************************************************\
 *                                                                            *
 * ns1__changePassword                                                        *
 *                                                                            *
\******************************************************************************/

/// Operation response struct "ns1__changePasswordResponse" of service binding "LeafNetsWebServiceSoapBinding" operation "ns1__changePassword"
struct ns1__changePasswordResponse
{
};

/// Operation "ns1__changePassword" of service binding "LeafNetsWebServiceSoapBinding"

/**

Operation details:

  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__changePassword(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    char*                               in0,
    char*                               in1,
    // response parameters:
    struct ns1__changePasswordResponse*
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__changePassword(
    struct soap *soap,
    // request parameters:
    char*                               in0,
    char*                               in1,
    // response parameters:
    struct ns1__changePasswordResponse*
  );
@endcode

*/

//gsoap ns1  service method-style:	changePassword rpc
//gsoap ns1  service method-encoding:	changePassword http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	changePassword ""
int ns1__changePassword(
    char*                               _in0,	///< Request parameter
    char*                               _in1,	///< Request parameter
    struct ns1__changePasswordResponse *	///< Response struct parameter
);

/******************************************************************************\
 *                                                                            *
 * ns1__updateContact                                                         *
 *                                                                            *
\******************************************************************************/

/// Operation response struct "ns1__updateContactResponse" of service binding "LeafNetsWebServiceSoapBinding" operation "ns1__updateContact"
struct ns1__updateContactResponse
{
};

/// Operation "ns1__updateContact" of service binding "LeafNetsWebServiceSoapBinding"

/**

Operation details:

  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__updateContact(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct ns2__Contact*                in0,
    // response parameters:
    struct ns1__updateContactResponse*
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__updateContact(
    struct soap *soap,
    // request parameters:
    struct ns2__Contact*                in0,
    // response parameters:
    struct ns1__updateContactResponse*
  );
@endcode

*/

//gsoap ns1  service method-style:	updateContact rpc
//gsoap ns1  service method-encoding:	updateContact http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	updateContact ""
int ns1__updateContact(
    struct ns2__Contact*                _in0,	///< Request parameter
    struct ns1__updateContactResponse  *	///< Response struct parameter
);

/******************************************************************************\
 *                                                                            *
 * ns1__getContact                                                            *
 *                                                                            *
\******************************************************************************/

/// Operation response struct "ns1__getContactResponse" of service binding "LeafNetsWebServiceSoapBinding" operation "ns1__getContact"
struct ns1__getContactResponse
{
    struct ns2__Contact*                _getContactReturn;
};

/// Operation "ns1__getContact" of service binding "LeafNetsWebServiceSoapBinding"

/**

Operation details:

  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__getContact(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    char*                               in0,
    // response parameters:
    struct ns1__getContactResponse*
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__getContact(
    struct soap *soap,
    // request parameters:
    char*                               in0,
    // response parameters:
    struct ns1__getContactResponse*
  );
@endcode

*/

//gsoap ns1  service method-style:	getContact rpc
//gsoap ns1  service method-encoding:	getContact http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	getContact ""
int ns1__getContact(
    char*                               _in0,	///< Request parameter
    struct ns1__getContactResponse     *	///< Response struct parameter
);

/******************************************************************************\
 *                                                                            *
 * ns1__lookupContacts                                                        *
 *                                                                            *
\******************************************************************************/

/// Operation response struct "ns1__lookupContactsResponse" of service binding "LeafNetsWebServiceSoapBinding" operation "ns1__lookupContacts"
struct ns1__lookupContactsResponse
{
    struct ArrayOf_USCORExsd_USCOREanyType* _lookupContactsReturn;
};

/// Operation "ns1__lookupContacts" of service binding "LeafNetsWebServiceSoapBinding"

/**

Operation details:

  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__lookupContacts(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct ns2__Contact*                in0,
    // response parameters:
    struct ns1__lookupContactsResponse*
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__lookupContacts(
    struct soap *soap,
    // request parameters:
    struct ns2__Contact*                in0,
    // response parameters:
    struct ns1__lookupContactsResponse*
  );
@endcode

*/

//gsoap ns1  service method-style:	lookupContacts rpc
//gsoap ns1  service method-encoding:	lookupContacts http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	lookupContacts ""
int ns1__lookupContacts(
    struct ns2__Contact*                _in0,	///< Request parameter
    struct ns1__lookupContactsResponse *	///< Response struct parameter
);

/******************************************************************************\
 *                                                                            *
 * ns1__addNetwork                                                            *
 *                                                                            *
\******************************************************************************/

/// Operation response struct "ns1__addNetworkResponse" of service binding "LeafNetsWebServiceSoapBinding" operation "ns1__addNetwork"
struct ns1__addNetworkResponse
{
    struct ns2__Network*                _addNetworkReturn;
};

/// Operation "ns1__addNetwork" of service binding "LeafNetsWebServiceSoapBinding"

/**

Operation details:

  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__addNetwork(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    char*                               in0,
    char*                               in1,
    struct ArrayOf_USCORExsd_USCOREanyType* in2,
    // response parameters:
    struct ns1__addNetworkResponse*
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__addNetwork(
    struct soap *soap,
    // request parameters:
    char*                               in0,
    char*                               in1,
    struct ArrayOf_USCORExsd_USCOREanyType* in2,
    // response parameters:
    struct ns1__addNetworkResponse*
  );
@endcode

*/

//gsoap ns1  service method-style:	addNetwork rpc
//gsoap ns1  service method-encoding:	addNetwork http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	addNetwork ""
int ns1__addNetwork(
    char*                               _in0,	///< Request parameter
    char*                               _in1,	///< Request parameter
    struct ArrayOf_USCORExsd_USCOREanyType* _in2,	///< Request parameter
    struct ns1__addNetworkResponse     *	///< Response struct parameter
);

/******************************************************************************\
 *                                                                            *
 * ns1__deleteNetwork                                                         *
 *                                                                            *
\******************************************************************************/

/// Operation response struct "ns1__deleteNetworkResponse" of service binding "LeafNetsWebServiceSoapBinding" operation "ns1__deleteNetwork"
struct ns1__deleteNetworkResponse
{
};

/// Operation "ns1__deleteNetwork" of service binding "LeafNetsWebServiceSoapBinding"

/**

Operation details:

  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__deleteNetwork(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    LONG64                              in0,
    // response parameters:
    struct ns1__deleteNetworkResponse*
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__deleteNetwork(
    struct soap *soap,
    // request parameters:
    LONG64                              in0,
    // response parameters:
    struct ns1__deleteNetworkResponse*
  );
@endcode

*/

//gsoap ns1  service method-style:	deleteNetwork rpc
//gsoap ns1  service method-encoding:	deleteNetwork http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	deleteNetwork ""
int ns1__deleteNetwork(
    LONG64                              _in0,	///< Request parameter
    struct ns1__deleteNetworkResponse  *	///< Response struct parameter
);

/******************************************************************************\
 *                                                                            *
 * ns1__inviteNetworkMember                                                   *
 *                                                                            *
\******************************************************************************/

/// Operation response struct "ns1__inviteNetworkMemberResponse" of service binding "LeafNetsWebServiceSoapBinding" operation "ns1__inviteNetworkMember"
struct ns1__inviteNetworkMemberResponse
{
    struct ns2__Member*                 _inviteNetworkMemberReturn;
};

/// Operation "ns1__inviteNetworkMember" of service binding "LeafNetsWebServiceSoapBinding"

/**

Operation details:

  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__inviteNetworkMember(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    LONG64                              in0,
    char*                               in1,
    // response parameters:
    struct ns1__inviteNetworkMemberResponse*
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__inviteNetworkMember(
    struct soap *soap,
    // request parameters:
    LONG64                              in0,
    char*                               in1,
    // response parameters:
    struct ns1__inviteNetworkMemberResponse*
  );
@endcode

*/

//gsoap ns1  service method-style:	inviteNetworkMember rpc
//gsoap ns1  service method-encoding:	inviteNetworkMember http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	inviteNetworkMember ""
int ns1__inviteNetworkMember(
    LONG64                              _in0,	///< Request parameter
    char*                               _in1,	///< Request parameter
    struct ns1__inviteNetworkMemberResponse*	///< Response struct parameter
);

/******************************************************************************\
 *                                                                            *
 * ns1__inviteNetworkMemberByEmail                                            *
 *                                                                            *
\******************************************************************************/

/// Operation response struct "ns1__inviteNetworkMemberByEmailResponse" of service binding "LeafNetsWebServiceSoapBinding" operation "ns1__inviteNetworkMemberByEmail"
struct ns1__inviteNetworkMemberByEmailResponse
{
    struct ns2__Member*                 _inviteNetworkMemberByEmailReturn;
};

/// Operation "ns1__inviteNetworkMemberByEmail" of service binding "LeafNetsWebServiceSoapBinding"

/**

Operation details:

  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__inviteNetworkMemberByEmail(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    LONG64                              in0,
    char*                               in1,
    // response parameters:
    struct ns1__inviteNetworkMemberByEmailResponse*
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__inviteNetworkMemberByEmail(
    struct soap *soap,
    // request parameters:
    LONG64                              in0,
    char*                               in1,
    // response parameters:
    struct ns1__inviteNetworkMemberByEmailResponse*
  );
@endcode

*/

//gsoap ns1  service method-style:	inviteNetworkMemberByEmail rpc
//gsoap ns1  service method-encoding:	inviteNetworkMemberByEmail http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	inviteNetworkMemberByEmail ""
int ns1__inviteNetworkMemberByEmail(
    LONG64                              _in0,	///< Request parameter
    char*                               _in1,	///< Request parameter
    struct ns1__inviteNetworkMemberByEmailResponse*	///< Response struct parameter
);

/******************************************************************************\
 *                                                                            *
 * ns1__inviteNetworkMemberByUser                                             *
 *                                                                            *
\******************************************************************************/

/// Operation response struct "ns1__inviteNetworkMemberByUserResponse" of service binding "LeafNetsWebServiceSoapBinding" operation "ns1__inviteNetworkMemberByUser"
struct ns1__inviteNetworkMemberByUserResponse
{
    struct ns2__Member*                 _inviteNetworkMemberByUserReturn;
};

/// Operation "ns1__inviteNetworkMemberByUser" of service binding "LeafNetsWebServiceSoapBinding"

/**

Operation details:

  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__inviteNetworkMemberByUser(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    LONG64                              in0,
    struct ns2__User*                   in1,
    struct ns2__Contact*                in2,
    // response parameters:
    struct ns1__inviteNetworkMemberByUserResponse*
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__inviteNetworkMemberByUser(
    struct soap *soap,
    // request parameters:
    LONG64                              in0,
    struct ns2__User*                   in1,
    struct ns2__Contact*                in2,
    // response parameters:
    struct ns1__inviteNetworkMemberByUserResponse*
  );
@endcode

*/

//gsoap ns1  service method-style:	inviteNetworkMemberByUser rpc
//gsoap ns1  service method-encoding:	inviteNetworkMemberByUser http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	inviteNetworkMemberByUser ""
int ns1__inviteNetworkMemberByUser(
    LONG64                              _in0,	///< Request parameter
    struct ns2__User*                   _in1,	///< Request parameter
    struct ns2__Contact*                _in2,	///< Request parameter
    struct ns1__inviteNetworkMemberByUserResponse*	///< Response struct parameter
);

/******************************************************************************\
 *                                                                            *
 * ns1__acceptNetworkInvite                                                   *
 *                                                                            *
\******************************************************************************/

/// Operation response struct "ns1__acceptNetworkInviteResponse" of service binding "LeafNetsWebServiceSoapBinding" operation "ns1__acceptNetworkInvite"
struct ns1__acceptNetworkInviteResponse
{
};

/// Operation "ns1__acceptNetworkInvite" of service binding "LeafNetsWebServiceSoapBinding"

/**

Operation details:

  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__acceptNetworkInvite(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    LONG64                              in0,
    char*                               in1,
    // response parameters:
    struct ns1__acceptNetworkInviteResponse*
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__acceptNetworkInvite(
    struct soap *soap,
    // request parameters:
    LONG64                              in0,
    char*                               in1,
    // response parameters:
    struct ns1__acceptNetworkInviteResponse*
  );
@endcode

*/

//gsoap ns1  service method-style:	acceptNetworkInvite rpc
//gsoap ns1  service method-encoding:	acceptNetworkInvite http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	acceptNetworkInvite ""
int ns1__acceptNetworkInvite(
    LONG64                              _in0,	///< Request parameter
    char*                               _in1,	///< Request parameter
    struct ns1__acceptNetworkInviteResponse*	///< Response struct parameter
);

/******************************************************************************\
 *                                                                            *
 * ns1__declineNetworkInvite                                                  *
 *                                                                            *
\******************************************************************************/

/// Operation response struct "ns1__declineNetworkInviteResponse" of service binding "LeafNetsWebServiceSoapBinding" operation "ns1__declineNetworkInvite"
struct ns1__declineNetworkInviteResponse
{
};

/// Operation "ns1__declineNetworkInvite" of service binding "LeafNetsWebServiceSoapBinding"

/**

Operation details:

  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__declineNetworkInvite(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    LONG64                              in0,
    char*                               in1,
    // response parameters:
    struct ns1__declineNetworkInviteResponse*
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__declineNetworkInvite(
    struct soap *soap,
    // request parameters:
    LONG64                              in0,
    char*                               in1,
    // response parameters:
    struct ns1__declineNetworkInviteResponse*
  );
@endcode

*/

//gsoap ns1  service method-style:	declineNetworkInvite rpc
//gsoap ns1  service method-encoding:	declineNetworkInvite http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	declineNetworkInvite ""
int ns1__declineNetworkInvite(
    LONG64                              _in0,	///< Request parameter
    char*                               _in1,	///< Request parameter
    struct ns1__declineNetworkInviteResponse*	///< Response struct parameter
);

/******************************************************************************\
 *                                                                            *
 * ns1__deleteNetworkMember                                                   *
 *                                                                            *
\******************************************************************************/

/// Operation response struct "ns1__deleteNetworkMemberResponse" of service binding "LeafNetsWebServiceSoapBinding" operation "ns1__deleteNetworkMember"
struct ns1__deleteNetworkMemberResponse
{
};

/// Operation "ns1__deleteNetworkMember" of service binding "LeafNetsWebServiceSoapBinding"

/**

Operation details:

  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__deleteNetworkMember(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    LONG64                              in0,
    char*                               in1,
    // response parameters:
    struct ns1__deleteNetworkMemberResponse*
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__deleteNetworkMember(
    struct soap *soap,
    // request parameters:
    LONG64                              in0,
    char*                               in1,
    // response parameters:
    struct ns1__deleteNetworkMemberResponse*
  );
@endcode

*/

//gsoap ns1  service method-style:	deleteNetworkMember rpc
//gsoap ns1  service method-encoding:	deleteNetworkMember http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	deleteNetworkMember ""
int ns1__deleteNetworkMember(
    LONG64                              _in0,	///< Request parameter
    char*                               _in1,	///< Request parameter
    struct ns1__deleteNetworkMemberResponse*	///< Response struct parameter
);

/******************************************************************************\
 *                                                                            *
 * ns1__leaveNetwork                                                          *
 *                                                                            *
\******************************************************************************/

/// Operation response struct "ns1__leaveNetworkResponse" of service binding "LeafNetsWebServiceSoapBinding" operation "ns1__leaveNetwork"
struct ns1__leaveNetworkResponse
{
};

/// Operation "ns1__leaveNetwork" of service binding "LeafNetsWebServiceSoapBinding"

/**

Operation details:

  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__leaveNetwork(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    LONG64                              in0,
    char*                               in1,
    // response parameters:
    struct ns1__leaveNetworkResponse*
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__leaveNetwork(
    struct soap *soap,
    // request parameters:
    LONG64                              in0,
    char*                               in1,
    // response parameters:
    struct ns1__leaveNetworkResponse*
  );
@endcode

*/

//gsoap ns1  service method-style:	leaveNetwork rpc
//gsoap ns1  service method-encoding:	leaveNetwork http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	leaveNetwork ""
int ns1__leaveNetwork(
    LONG64                              _in0,	///< Request parameter
    char*                               _in1,	///< Request parameter
    struct ns1__leaveNetworkResponse   *	///< Response struct parameter
);

/******************************************************************************\
 *                                                                            *
 * ns1__getNetworks                                                           *
 *                                                                            *
\******************************************************************************/

/// Operation response struct "ns1__getNetworksResponse" of service binding "LeafNetsWebServiceSoapBinding" operation "ns1__getNetworks"
struct ns1__getNetworksResponse
{
    struct ArrayOf_USCORExsd_USCOREanyType* _getNetworksReturn;
};

/// Operation "ns1__getNetworks" of service binding "LeafNetsWebServiceSoapBinding"

/**

Operation details:

  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__getNetworks(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    char*                               in0,
    // response parameters:
    struct ns1__getNetworksResponse*
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__getNetworks(
    struct soap *soap,
    // request parameters:
    char*                               in0,
    // response parameters:
    struct ns1__getNetworksResponse*
  );
@endcode

*/

//gsoap ns1  service method-style:	getNetworks rpc
//gsoap ns1  service method-encoding:	getNetworks http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	getNetworks ""
int ns1__getNetworks(
    char*                               _in0,	///< Request parameter
    struct ns1__getNetworksResponse    *	///< Response struct parameter
);

/******************************************************************************\
 *                                                                            *
 * ns1__getNetwork                                                            *
 *                                                                            *
\******************************************************************************/

/// Operation response struct "ns1__getNetworkResponse" of service binding "LeafNetsWebServiceSoapBinding" operation "ns1__getNetwork"
struct ns1__getNetworkResponse
{
    struct ns2__Network*                _getNetworkReturn;
};

/// Operation "ns1__getNetwork" of service binding "LeafNetsWebServiceSoapBinding"

/**

Operation details:

  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__getNetwork(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    LONG64                              in0,
    // response parameters:
    struct ns1__getNetworkResponse*
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__getNetwork(
    struct soap *soap,
    // request parameters:
    LONG64                              in0,
    // response parameters:
    struct ns1__getNetworkResponse*
  );
@endcode

*/

//gsoap ns1  service method-style:	getNetwork rpc
//gsoap ns1  service method-encoding:	getNetwork http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	getNetwork ""
int ns1__getNetwork(
    LONG64                              _in0,	///< Request parameter
    struct ns1__getNetworkResponse     *	///< Response struct parameter
);

/******************************************************************************\
 *                                                                            *
 * ns1__getNotifications                                                      *
 *                                                                            *
\******************************************************************************/

/// Operation response struct "ns1__getNotificationsResponse" of service binding "LeafNetsWebServiceSoapBinding" operation "ns1__getNotifications"
struct ns1__getNotificationsResponse
{
    struct ArrayOf_USCORExsd_USCOREanyType* _getNotificationsReturn;
};

/// Operation "ns1__getNotifications" of service binding "LeafNetsWebServiceSoapBinding"

/**

Operation details:

  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__getNotifications(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    char*                               in0,
    // response parameters:
    struct ns1__getNotificationsResponse*
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__getNotifications(
    struct soap *soap,
    // request parameters:
    char*                               in0,
    // response parameters:
    struct ns1__getNotificationsResponse*
  );
@endcode

*/

//gsoap ns1  service method-style:	getNotifications rpc
//gsoap ns1  service method-encoding:	getNotifications http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	getNotifications ""
int ns1__getNotifications(
    char*                               _in0,	///< Request parameter
    struct ns1__getNotificationsResponse*	///< Response struct parameter
);

/******************************************************************************\
 *                                                                            *
 * ns1__getSystemNotifications                                                *
 *                                                                            *
\******************************************************************************/

/// Operation response struct "ns1__getSystemNotificationsResponse" of service binding "LeafNetsWebServiceSoapBinding" operation "ns1__getSystemNotifications"
struct ns1__getSystemNotificationsResponse
{
    struct ArrayOf_USCORExsd_USCOREanyType* getSystemNotificationsReturn;
};

/// Operation "ns1__getSystemNotifications" of service binding "LeafNetsWebServiceSoapBinding"

/**

Operation details:

  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__getSystemNotifications(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    // response parameters:
    struct ns1__getSystemNotificationsResponse*
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__getSystemNotifications(
    struct soap *soap,
    // request parameters:
    // response parameters:
    struct ns1__getSystemNotificationsResponse*
  );
@endcode

*/

//gsoap ns1  service method-style:	getSystemNotifications rpc
//gsoap ns1  service method-encoding:	getSystemNotifications http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	getSystemNotifications ""
int ns1__getSystemNotifications(
    struct ns1__getSystemNotificationsResponse*	///< Response struct parameter
);

/* End of LeafNets.h */
